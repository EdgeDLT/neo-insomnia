{
  "_type": "export",
  "__export_format": 4,
  "__export_date": "2021-12-22T21:22:28.629Z",
  "__export_source": "insomnia.desktop.app:v2021.7.2",
  "resources": [
    {
      "_id": "req_bab7ecddde9b49ebb738d6e7d7b5dfb9",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207897480,
      "created": 1598255145908,
      "url": "{{ node }}",
      "name": "getbestblockhash",
      "description": "Returns the latest block hash of the main chain.\n\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\n##### Request body\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"method\": \"getbestblockhash\",\n   \"params\":[],\n   \"id\": 1\n}\n```\n\n##### Response body\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"id\": 1,\n   \"result\": \"0xbee7a65279d6b31cc45445a7579d4c4a4e52d1edc13cc7ec7a41f7b1affdf0ab\"\n}\n```\n\n##### Response Description\n\nResult: The latest block hash of the main chain.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getbestblockhash\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146058,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1640208081279,
      "created": 1598954065769,
      "name": "Blockchain",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1598255139706,
      "_type": "request_group"
    },
    {
      "_id": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "parentId": null,
      "modified": 1639669473794,
      "created": 1595345719374,
      "name": "Neo N3 API",
      "description": "Last Updated: **Neo v3.1.0**\n\nA full collection of standard requests for use with the RPC API exposed by public Neo N3 nodes. The API reference is based on the official core client release; other node implementations (e.g. NeoGo) may have different behavior or supported methods.\n\nThree environments are provided: one for MainNet, one for TestNet, and one set up following the [Neo Express](https://github.com/neo-project/neo-express) defaults. \n\nSimply modify the `node` and `port` variables within the relevant network environment context if you want to test requests against a different node.\n\n",
      "scope": "design",
      "_type": "workspace"
    },
    {
      "_id": "req_16b18ee3c1484e10bd575740c184493d",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207900630,
      "created": 1598255447326,
      "url": "{{ node }}",
      "name": "getblock",
      "description": "Returns the corresponding block information according to the specified hash or index.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n* hash | index: Block hash string or block index (i.e. block height = number of blocks - 1).\n\n* verbose: Optional. The default value is 0. \n  * When verbose is 0, serialized information of the block is returned in a hexadecimal string. If you need the detailed information, use SDK for deserialization. \n  * When verbose is 1, detailed information of the block is returned in Json format.\n\n## Example\n\n**Example 1 - invoke with block hash**\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblock\",\n  \"params\": [\"0xdf9c92cdb8d503214d0bf6c231ccbfa25c20ce24fc4d03a966760e4423889710\", 0],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"AAAAAFjOB3LXvZFhG/DF9PnA4Zh/buBfAFhvwG6JAzP4EAht5itJ14qK/tiaUxujBBTdZAYFAKnwJroJd8AQAp+vHgzyjenQdQEAANAHAAD6lrDvowCyjK9dBALCmE1fvMuahQFCDEBxGiRWC9d/xNWdbZ1uM9Z/yBVoPLKG6WTQ22aMOgk/AwQMTFdgoZEoSkvyA0791Y1AV146AJEu2R/jFOZZyj37KxEMIQL4L//X3jDpIyMLze0sPNW+yFcufrrL3bnzOipdJpNLixELQRON768BAGgp5HJL+bHp\"\n}\n```\n\nRequest body:\n\nverbose = 1ï¼Œreturns the result in JSON format:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblock\",\n  \"params\": [\"0xdf9c92cdb8d503214d0bf6c231ccbfa25c20ce24fc4d03a966760e4423889710\", 1],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0xdf9c92cdb8d503214d0bf6c231ccbfa25c20ce24fc4d03a966760e4423889710\",\n        \"size\": 222,\n        \"version\": 0,\n        \"previousblockhash\": \"0x6d0810f83303896ec06f58005fe06e7f98e1c0f9f4c5f01b6191bdd77207ce58\",\n        \"merkleroot\": \"0x0c1eaf9f0210c07709ba26f0a900050664dd1404a31b539ad8fe8a8ad7492be6\",\n        \"time\": 1605527768562,\n        \"index\": 2000,\n        \"nextconsensus\": \"NikxdvEetzBKLHAddYJ7BHZT9USwm8qGFP\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEBxGiRWC9d/xNWdbZ1uM9Z/yBVoPLKG6WTQ22aMOgk/AwQMTFdgoZEoSkvyA0791Y1AV146AJEu2R/jFOZZyj37\",\n                \"verification\": \"EQwhAvgv/9feMOkjIwvN7Sw81b7IVy5+usvdufM6Kl0mk0uLEQtBE43vrw==\"\n            }\n        ],\n        \"consensusdata\": {\n            \"primary\": 0,\n            \"nonce\": \"e9b1f94b72e42968\"\n        },\n        \"tx\": [],\n        \"confirmations\": 5313,\n        \"nextblockhash\": \"0x09638b66b8254485b594e7849dc279675e7631a06cdff857bee6991c1daa8105\"\n    }\n}\n```\n\n**Example 2 - invoke with block index**\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblock\",\n  \"params\": [7368],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"AAAAACMSKFbGpGl6t7uroMpi2ilhQd84eU/pUrRfQyswXYl76woLOY0oW1z4InfxoKyxFAAB+8FS6cRu2Pm0iaOiD8OMCnLadQEAAMgcAAD6lrDvowCyjK9dBALCmE1fvMuahQFCDEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wCKxEMIQL4L//X3jDpIyMLze0sPNW+yFcufrrL3bnzOipdJpNLixELQRON768CAGUTt7+NSxXGAA7aoUS2kokAAAAAACYcEwAAAAAARzMAAAHNWK7P0zW+HrPTEeHcgAlj39ctnwEAXQMA5AtUAgAAAAwUzViuz9M1vh6z0xHh3IAJY9/XLZ8MFM1Yrs/TNb4es9MR4dyACWPf1y2fE8AMCHRyYW5zZmVyDBS8r0HWhMfUrW7g2Z2pcHudHwyOZkFifVtSOAFCDEADRhUarLK+/BBjhqaWY5ieento21zgkcsUMWNCBWGd+v8a35zatNRgFbUkni4dDNI/BGc3zOgPT6EwroUsgvR+KQwhAv3yei642bBp1hrlpk26E7iWN8VC2MdMXWurST/mONaPC0GVRA14\"\n}\n```\n\nRequest body:\n\nVerbose = 1, returns the result in JSON format:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblock\",\n  \"params\": [7368,1],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0x5f0b81b921eebf719f97e98e8c56e260db8720138b4a7def766b1498a3f4296b\",\n        \"size\": 474,\n        \"version\": 0,\n        \"previousblockhash\": \"0x7b895d302b435fb452e94f7938df416129da62caa0abbbb77a69a4c656281223\",\n        \"merkleroot\": \"0xc30fa2a389b4f9d86ec4e952c1fb010014b1aca0f17722f85c5b288d390b0aeb\",\n        \"time\": 1605687708300,\n        \"index\": 7368,\n        \"nextconsensus\": \"NikxdvEetzBKLHAddYJ7BHZT9USwm8qGFP\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wC\",\n                \"verification\": \"EQwhAvgv/9feMOkjIwvN7Sw81b7IVy5+usvdufM6Kl0mk0uLEQtBE43vrw==\"\n            }\n        ],\n        \"consensusdata\": {\n            \"primary\": 0,\n            \"nonce\": \"c6154b8dbfb71365\"\n        },\n        \"tx\": [\n            {\n                \"hash\": \"0xdcdac54af951034bccc5079e8619f9ce9803a5e2fb90e351571657a62e38b28a\",\n                \"size\": 252,\n                \"version\": 0,\n                \"nonce\": 1151457806,\n                \"sender\": \"NedjwsfAJYFas9rn8UHWQftTW4oKAQyW9h\",\n                \"sysfee\": \"9015990\",\n                \"netfee\": \"1252390\",\n                \"validuntilblock\": 13127,\n                \"signers\": [\n                    {\n                        \"account\": \"0x9f2dd7df630980dce111d3b31ebe35d3cfae58cd\",\n                        \"scopes\": \"CalledByEntry\"\n                    }\n                ],\n                \"attributes\": [],\n                \"script\": \"AwDkC1QCAAAADBTNWK7P0zW+HrPTEeHcgAlj39ctnwwUzViuz9M1vh6z0xHh3IAJY9/XLZ8TwAwIdHJhbnNmZXIMFLyvQdaEx9StbuDZnalwe50fDI5mQWJ9W1I4\",\n                \"witnesses\": [\n                    {\n                        \"invocation\": \"DEADRhUarLK+/BBjhqaWY5ieento21zgkcsUMWNCBWGd+v8a35zatNRgFbUkni4dDNI/BGc3zOgPT6EwroUsgvR+\",\n                        \"verification\": \"DCEC/fJ6LrjZsGnWGuWmTboTuJY3xULYx0xda6tJP+Y41o8LQZVEDXg=\"\n                    }\n                ]\n            }\n        ],\n        \"confirmations\": 2,\n        \"nextblockhash\": \"0x1545a328149baf8037873793d7e45d27385221dd69ddb606ee55434eb173a3ff\"\n    }\n}\n```\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getblock\",\n\t\"params\": [\n\t\t295000,\n\t\t1\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146033,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_69a40d7d35f64f3e8d971b451ca5c3c0",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207903860,
      "created": 1598255292227,
      "url": "{{ node }}",
      "name": "getblockcount",
      "description": "Gets the block count of the main chain.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"method\": \"getblockcount\",\n   \"params\":[],\n   \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"id\": 1,\n   \"result\": 991991\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getblockcount\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146008,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_7465535055064b5a9fd3fadc812f223b",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207906771,
      "created": 1598954208568,
      "url": "{{ node }}",
      "name": "getblockhash",
      "description": "Returns the hash value of the corresponding block based on the specified index.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n##  Parameter Description\n\nindex: Block index (block height)\n\n## Example\n\nRequest body:\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"method\": \"getblockhash\",\n   \"params\": [10000],\n   \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"id\": 1,\n   \"result\": \"0xdf17b40c5627a45e83d61b286a6d6d14859136621760d0a5b58dd59d18fd53d4\"\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getblockhash\",\n\t\"params\": [\n\t\t500\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145983,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_a20ec551546942c18dcd23c4092d6ffd",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207907906,
      "created": 1598954226972,
      "url": "{{ node }}",
      "name": "getblockheader",
      "description": "Returns the corresponding block header information according to the specified script hash or index.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n* hash | index: The block script hash or index (i.e. block height=number of blocks - 1).\n\n* verbose: Optional, the default value is 0. \n  * When verbose is 0, serialized information of the block is returned in a hexadecimal string. If you need the detailed information, use the SDK for deserialization. \n  * When verbose is 1, detailed information of the block is returned in Json format. \n\n## Example\n\n**Example 1 - invoke with block hash**\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblockheader\",\n  \"params\": [\"0x5f0b81b921eebf719f97e98e8c56e260db8720138b4a7def766b1498a3f4296b\", 0],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"AAAAACMSKFbGpGl6t7uroMpi2ilhQd84eU/pUrRfQyswXYl76woLOY0oW1z4InfxoKyxFAAB+8FS6cRu2Pm0iaOiD8OMCnLadQEAAMgcAAD6lrDvowCyjK9dBALCmE1fvMuahQFCDEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wCKxEMIQL4L//X3jDpIyMLze0sPNW+yFcufrrL3bnzOipdJpNLixELQRON768A\"\n}\n```\n\nRequest body:\n\nVerbose = 1, returns the result in JSON format:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblockheader\",\n  \"params\": [\"0x5f0b81b921eebf719f97e98e8c56e260db8720138b4a7def766b1498a3f4296b\",1],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0x5f0b81b921eebf719f97e98e8c56e260db8720138b4a7def766b1498a3f4296b\",\n        \"size\": 213,\n        \"version\": 0,\n        \"previousblockhash\": \"0x7b895d302b435fb452e94f7938df416129da62caa0abbbb77a69a4c656281223\",\n        \"merkleroot\": \"0xc30fa2a389b4f9d86ec4e952c1fb010014b1aca0f17722f85c5b288d390b0aeb\",\n        \"time\": 1605687708300,\n        \"index\": 7368,\n        \"nextconsensus\": \"NikxdvEetzBKLHAddYJ7BHZT9USwm8qGFP\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wC\",\n                \"verification\": \"EQwhAvgv/9feMOkjIwvN7Sw81b7IVy5+usvdufM6Kl0mk0uLEQtBE43vrw==\"\n            }\n        ],\n        \"confirmations\": 12,\n        \"nextblockhash\": \"0x1545a328149baf8037873793d7e45d27385221dd69ddb606ee55434eb173a3ff\"\n    }\n}\n```\n\n**Example 2 - invoke with block index**\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblockheader\",\n  \"params\": [7368],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"AAAAACMSKFbGpGl6t7uroMpi2ilhQd84eU/pUrRfQyswXYl76woLOY0oW1z4InfxoKyxFAAB+8FS6cRu2Pm0iaOiD8OMCnLadQEAAMgcAAD6lrDvowCyjK9dBALCmE1fvMuahQFCDEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wCKxEMIQL4L//X3jDpIyMLze0sPNW+yFcufrrL3bnzOipdJpNLixELQRON768A\"\n}\n```\n\nRequest body:\n\nVerbose = 1, returns the result in JSON format:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getblockheader\",\n  \"params\": [7368, 1],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0x5f0b81b921eebf719f97e98e8c56e260db8720138b4a7def766b1498a3f4296b\",\n        \"size\": 213,\n        \"version\": 0,\n        \"previousblockhash\": \"0x7b895d302b435fb452e94f7938df416129da62caa0abbbb77a69a4c656281223\",\n        \"merkleroot\": \"0xc30fa2a389b4f9d86ec4e952c1fb010014b1aca0f17722f85c5b288d390b0aeb\",\n        \"time\": 1605687708300,\n        \"index\": 7368,\n        \"nextconsensus\": \"NikxdvEetzBKLHAddYJ7BHZT9USwm8qGFP\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wC\",\n                \"verification\": \"EQwhAvgv/9feMOkjIwvN7Sw81b7IVy5+usvdufM6Kl0mk0uLEQtBE43vrw==\"\n            }\n        ],\n        \"confirmations\": 16,\n        \"nextblockhash\": \"0x1545a328149baf8037873793d7e45d27385221dd69ddb606ee55434eb173a3ff\"\n    }\n}\n```\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getblockheader\",\n\t\"params\": [\n\t\t\"0x1f4d1defa46faa5e7b9b8d3f79a06bec777d7c26c4aa5f6f5899a291daa87c15\",\n\t\t1\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145970.5,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_1d760c7ae91b4e8d8bf94f20f758bfeb",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207909283,
      "created": 1598954311355,
      "url": "{{ node }}",
      "name": "getcontractstate",
      "description": "Queries the contract information with the contract script hash. \n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\nscript_hash: Contract script hash \n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getcontractstate\",\n  \"params\": [\"0x99042d380f2b754175717bb932a911bc0bb0ad7d\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"id\": 8,\n        \"hash\": \"0x99042d380f2b754175717bb932a911bc0bb0ad7d\",\n        \"script\": \"DBQKo4e1Ppa3mJpjFDGgVt0fQKBC9kH4J+yMQDTkQFcBAAwFSGVsbG9Bm/ZnzkGSXegxcGhAVwQBEnAMF0ludm9rZSBTdHJvYWdlLlB1dCBmb3IgaBpQQXvjun0MByB0aW1lcy6Li9soQc/nR5YMBUhlbGxveFBBm/ZnzkHmPxiEDAJOb0Gb9mfOQZJd6DHYqnNrJiwMAk5vDAJOb0Gb9mfOQZJd6DFK2CYFEFBF2yERnlBBm/ZnzkHmPxiEIhMhDAJObxFQQZv2Z85B5j8YhAwCTm9Bm/ZnzkGSXegxcWlK2CYFEFBF2yEaUEF747p9chXDShAMBFB1dCDQShF40EoSDB0gaW50byBzdG9yYWdlIGNvbXBsZXRlbHkgZm9yINBKE2rQShQMBiB0aW1lc9DBShEyCJ1Ti1Ai+EXbKEHP50eWeBHADARXb3JkQZUBb2FpEcAMDkludm9rZVB1dENvdW50QZUBb2FAVwECNZL+//8Qs3BoJhYMEU5vIGF1dGhvcml6YXRpb24uOnh5UEExxjMdQFcBADVn/v//ELNwaCYWDBFObyBhdXRob3JpemF0aW9uLjohQcafHfBAVgEMFAqjh7U+lreYmmMUMaBW3R9AoEL2YEA=\",\n        \"manifest\": {\n            \"groups\": [],\n            \"supportedstandards\": [],\n            \"abi\": {\n                \"hash\": \"0x99042d380f2b754175717bb932a911bc0bb0ad7d\",\n                \"methods\": [\n                    {\n                        \"name\": \"verify\",\n                        \"parameters\": [],\n                        \"offset\": 28,\n                        \"returntype\": \"Boolean\"\n                    },\n                    {\n                        \"name\": \"myMethod\",\n                        \"parameters\": [],\n                        \"offset\": 31,\n                        \"returntype\": \"ByteArray\"\n                    },\n                    {\n                        \"name\": \"put\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"word\",\n                                \"type\": \"String\"\n                            }\n                        ],\n                        \"offset\": 54,\n                        \"returntype\": \"Void\"\n                    },\n                    {\n                        \"name\": \"update\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"script\",\n                                \"type\": \"ByteArray\"\n                            },\n                            {\n                                \"name\": \"manifest\",\n                                \"type\": \"String\"\n                            }\n                        ],\n                        \"offset\": 363,\n                        \"returntype\": \"Void\"\n                    },\n                    {\n                        \"name\": \"destroy\",\n                        \"parameters\": [],\n                        \"offset\": 406,\n                        \"returntype\": \"Void\"\n                    },\n                    {\n                        \"name\": \"_initialize\",\n                        \"parameters\": [],\n                        \"offset\": 447,\n                        \"returntype\": \"Void\"\n                    }\n                ],\n                \"events\": [\n                    {\n                        \"name\": \"Word\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"obj\",\n                                \"type\": \"String\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"InvokePutCount\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"obj\",\n                                \"type\": \"ByteArray\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"permissions\": [\n                {\n                    \"contract\": \"*\",\n                    \"methods\": \"*\"\n                }\n            ],\n            \"trusts\": [],\n            \"safemethods\": [],\n            \"extra\": {\n                \"Author\": \"Neo\",\n                \"Name\": \"Sample\",\n                \"Email\": \"dev@neo.org\",\n                \"Description\": \"This is a contract example\"\n            }\n        }\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getcontractstate\",\n\t\"params\": [\n\t\t\"0xd2a4cff31913016155e38e474a2c06d08be276cf\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145967.375,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_50fdd7e4cbb54e9b83c53ed00a2424e1",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207910547,
      "created": 1623692585801,
      "url": "{{ node }}",
      "name": "getnativecontracts",
      "description": "Gets the native contracts list, which includes the basic information of native contracts and the contract descriptive file manifest.json.\n\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"method\": \"getnativecontracts\",\n    \"params\": []\n}\n```\n\nResponse body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": [\n    {\n      \"id\": -1,\n      \"hash\": \"0xfffdc93764dbaddd97c48f252a53ea4643faa3fd\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0A=\",\n        \"checksum\": 1110259869\n      },\n      \"manifest\": {\n        \"name\": \"ContractManagement\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"deploy\",\n              \"parameters\": [\n                {\n                  \"name\": \"nefFile\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"manifest\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 0,\n              \"safe\": false\n            },\n            {\n              \"name\": \"deploy\",\n              \"parameters\": [\n                {\n                  \"name\": \"nefFile\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"manifest\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"data\",\n                  \"type\": \"Any\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 7,\n              \"safe\": false\n            },\n            {\n              \"name\": \"destroy\",\n              \"parameters\": [],\n              \"returntype\": \"Void\",\n              \"offset\": 14,\n              \"safe\": false\n            },\n            {\n              \"name\": \"getContract\",\n              \"parameters\": [\n                {\n                  \"name\": \"hash\",\n                  \"type\": \"Hash160\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 21,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getMinimumDeploymentFee\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 28,\n              \"safe\": true\n            },\n            {\n              \"name\": \"setMinimumDeploymentFee\",\n              \"parameters\": [\n                {\n                  \"name\": \"value\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 35,\n              \"safe\": false\n            },\n            {\n              \"name\": \"update\",\n              \"parameters\": [\n                {\n                  \"name\": \"nefFile\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"manifest\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 42,\n              \"safe\": false\n            },\n            {\n              \"name\": \"update\",\n              \"parameters\": [\n                {\n                  \"name\": \"nefFile\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"manifest\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"data\",\n                  \"type\": \"Any\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 49,\n              \"safe\": false\n            }\n          ],\n          \"events\": [\n            {\n              \"name\": \"Deploy\",\n              \"parameters\": [\n                {\n                  \"name\": \"Hash\",\n                  \"type\": \"Hash160\"\n                }\n              ]\n            },\n            {\n              \"name\": \"Update\",\n              \"parameters\": [\n                {\n                  \"name\": \"Hash\",\n                  \"type\": \"Hash160\"\n                }\n              ]\n            },\n            {\n              \"name\": \"Destroy\",\n              \"parameters\": [\n                {\n                  \"name\": \"Hash\",\n                  \"type\": \"Hash160\"\n                }\n              ]\n            }\n          ]\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -2,\n      \"hash\": \"0xacce6fd80d44e1796aa0c2c625e9e4e0ce39efc0\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQA==\",\n        \"checksum\": 2135988409\n      },\n      \"manifest\": {\n        \"name\": \"StdLib\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"atoi\",\n              \"parameters\": [\n                {\n                  \"name\": \"value\",\n                  \"type\": \"String\"\n                },\n                {\n                  \"name\": \"base\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Integer\",\n              \"offset\": 0,\n              \"safe\": true\n            },\n            {\n              \"name\": \"base58Decode\",\n              \"parameters\": [\n                {\n                  \"name\": \"s\",\n                  \"type\": \"String\"\n                }\n              ],\n              \"returntype\": \"ByteArray\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"base58Encode\",\n              \"parameters\": [\n                {\n                  \"name\": \"data\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"String\",\n              \"offset\": 14,\n              \"safe\": true\n            },\n            {\n              \"name\": \"base64Decode\",\n              \"parameters\": [\n                {\n                  \"name\": \"s\",\n                  \"type\": \"String\"\n                }\n              ],\n              \"returntype\": \"ByteArray\",\n              \"offset\": 21,\n              \"safe\": true\n            },\n            {\n              \"name\": \"base64Encode\",\n              \"parameters\": [\n                {\n                  \"name\": \"data\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"String\",\n              \"offset\": 28,\n              \"safe\": true\n            },\n            {\n              \"name\": \"deserialize\",\n              \"parameters\": [\n                {\n                  \"name\": \"data\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"Any\",\n              \"offset\": 35,\n              \"safe\": true\n            },\n            {\n              \"name\": \"itoa\",\n              \"parameters\": [\n                {\n                  \"name\": \"value\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"base\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"String\",\n              \"offset\": 42,\n              \"safe\": true\n            },\n            {\n              \"name\": \"jsonDeserialize\",\n              \"parameters\": [\n                {\n                  \"name\": \"json\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"Any\",\n              \"offset\": 49,\n              \"safe\": true\n            },\n            {\n              \"name\": \"jsonSerialize\",\n              \"parameters\": [\n                {\n                  \"name\": \"item\",\n                  \"type\": \"Any\"\n                }\n              ],\n              \"returntype\": \"ByteArray\",\n              \"offset\": 56,\n              \"safe\": true\n            },\n            {\n              \"name\": \"serialize\",\n              \"parameters\": [\n                {\n                  \"name\": \"item\",\n                  \"type\": \"Any\"\n                }\n              ],\n              \"returntype\": \"ByteArray\",\n              \"offset\": 63,\n              \"safe\": true\n            }\n          ],\n          \"events\": []\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -3,\n      \"hash\": \"0x726cb6e0cd8628a1350a611384688911ab75f51b\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dA\",\n        \"checksum\": 1592866325\n      },\n      \"manifest\": {\n        \"name\": \"CryptoLib\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"ripemd160\",\n              \"parameters\": [\n                {\n                  \"name\": \"data\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"ByteArray\",\n              \"offset\": 0,\n              \"safe\": true\n            },\n            {\n              \"name\": \"sha256\",\n              \"parameters\": [\n                {\n                  \"name\": \"data\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"ByteArray\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"verifyWithECDsa\",\n              \"parameters\": [\n                {\n                  \"name\": \"message\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"pubkey\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"signature\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"curve\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 14,\n              \"safe\": true\n            }\n          ],\n          \"events\": []\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -4,\n      \"hash\": \"0xda65b600f7124ce6c79950c1772a36403104f2be\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dA\",\n        \"checksum\": 529571427\n      },\n      \"manifest\": {\n        \"name\": \"LedgerContract\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"currentHash\",\n              \"parameters\": [],\n              \"returntype\": \"Hash256\",\n              \"offset\": 0,\n              \"safe\": true\n            },\n            {\n              \"name\": \"currentIndex\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getBlock\",\n              \"parameters\": [\n                {\n                  \"name\": \"indexOrHash\",\n                  \"type\": \"ByteArray\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 14,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getTransaction\",\n              \"parameters\": [\n                {\n                  \"name\": \"hash\",\n                  \"type\": \"Hash256\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 21,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getTransactionFromBlock\",\n              \"parameters\": [\n                {\n                  \"name\": \"blockIndexOrHash\",\n                  \"type\": \"ByteArray\"\n                },\n                {\n                  \"name\": \"txIndex\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 28,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getTransactionHeight\",\n              \"parameters\": [\n                {\n                  \"name\": \"hash\",\n                  \"type\": \"Hash256\"\n                }\n              ],\n              \"returntype\": \"Integer\",\n              \"offset\": 35,\n              \"safe\": true\n            }\n          ],\n          \"events\": []\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -5,\n      \"hash\": \"0xef4073a0f2b305a38ec4050e4d3d28bc40ea63f5\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQA==\",\n        \"checksum\": 1841570703\n      },\n      \"manifest\": {\n        \"name\": \"NeoToken\",\n        \"groups\": [],\n        \"supportedstandards\": [\n          \"NEP-17\"\n        ],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"balanceOf\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                }\n              ],\n              \"returntype\": \"Integer\",\n              \"offset\": 0,\n              \"safe\": true\n            },\n            {\n              \"name\": \"decimals\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getCandidates\",\n              \"parameters\": [],\n              \"returntype\": \"Array\",\n              \"offset\": 14,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getCommittee\",\n              \"parameters\": [],\n              \"returntype\": \"Array\",\n              \"offset\": 21,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getGasPerBlock\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 28,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getNextBlockValidators\",\n              \"parameters\": [],\n              \"returntype\": \"Array\",\n              \"offset\": 35,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getRegisterPrice\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 42,\n              \"safe\": true\n            },\n            {\n              \"name\": \"registerCandidate\",\n              \"parameters\": [\n                {\n                  \"name\": \"pubkey\",\n                  \"type\": \"PublicKey\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 49,\n              \"safe\": false\n            },\n            {\n              \"name\": \"setGasPerBlock\",\n              \"parameters\": [\n                {\n                  \"name\": \"gasPerBlock\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 56,\n              \"safe\": false\n            },\n            {\n              \"name\": \"setRegisterPrice\",\n              \"parameters\": [\n                {\n                  \"name\": \"registerPrice\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 63,\n              \"safe\": false\n            },\n            {\n              \"name\": \"symbol\",\n              \"parameters\": [],\n              \"returntype\": \"String\",\n              \"offset\": 70,\n              \"safe\": true\n            },\n            {\n              \"name\": \"totalSupply\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 77,\n              \"safe\": true\n            },\n            {\n              \"name\": \"transfer\",\n              \"parameters\": [\n                {\n                  \"name\": \"from\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"to\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"amount\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"data\",\n                  \"type\": \"Any\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 84,\n              \"safe\": false\n            },\n            {\n              \"name\": \"unclaimedGas\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"end\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Integer\",\n              \"offset\": 91,\n              \"safe\": true\n            },\n            {\n              \"name\": \"unregisterCandidate\",\n              \"parameters\": [\n                {\n                  \"name\": \"pubkey\",\n                  \"type\": \"PublicKey\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 98,\n              \"safe\": false\n            },\n            {\n              \"name\": \"vote\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"voteTo\",\n                  \"type\": \"PublicKey\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 105,\n              \"safe\": false\n            }\n          ],\n          \"events\": [\n            {\n              \"name\": \"Transfer\",\n              \"parameters\": [\n                {\n                  \"name\": \"from\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"to\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"amount\",\n                  \"type\": \"Integer\"\n                }\n              ]\n            }\n          ]\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -6,\n      \"hash\": \"0xd2a4cff31913016155e38e474a2c06d08be276cf\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0A=\",\n        \"checksum\": 2663858513\n      },\n      \"manifest\": {\n        \"name\": \"GasToken\",\n        \"groups\": [],\n        \"supportedstandards\": [\n          \"NEP-17\"\n        ],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"balanceOf\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                }\n              ],\n              \"returntype\": \"Integer\",\n              \"offset\": 0,\n              \"safe\": true\n            },\n            {\n              \"name\": \"decimals\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"symbol\",\n              \"parameters\": [],\n              \"returntype\": \"String\",\n              \"offset\": 14,\n              \"safe\": true\n            },\n            {\n              \"name\": \"totalSupply\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 21,\n              \"safe\": true\n            },\n            {\n              \"name\": \"transfer\",\n              \"parameters\": [\n                {\n                  \"name\": \"from\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"to\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"amount\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"data\",\n                  \"type\": \"Any\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 28,\n              \"safe\": false\n            }\n          ],\n          \"events\": [\n            {\n              \"name\": \"Transfer\",\n              \"parameters\": [\n                {\n                  \"name\": \"from\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"to\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"amount\",\n                  \"type\": \"Integer\"\n                }\n              ]\n            }\n          ]\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -7,\n      \"hash\": \"0xcc5e4edd9f5f8dba8bb65734541df7a1c081c67b\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0AQQRr3e2dA\",\n        \"checksum\": 3443651689\n      },\n      \"manifest\": {\n        \"name\": \"PolicyContract\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"blockAccount\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 0,\n              \"safe\": false\n            },\n            {\n              \"name\": \"getExecFeeFactor\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getFeePerByte\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 14,\n              \"safe\": true\n            },\n            {\n              \"name\": \"getStoragePrice\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 21,\n              \"safe\": true\n            },\n            {\n              \"name\": \"isBlocked\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 28,\n              \"safe\": true\n            },\n            {\n              \"name\": \"setExecFeeFactor\",\n              \"parameters\": [\n                {\n                  \"name\": \"value\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 35,\n              \"safe\": false\n            },\n            {\n              \"name\": \"setFeePerByte\",\n              \"parameters\": [\n                {\n                  \"name\": \"value\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 42,\n              \"safe\": false\n            },\n            {\n              \"name\": \"setStoragePrice\",\n              \"parameters\": [\n                {\n                  \"name\": \"value\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 49,\n              \"safe\": false\n            },\n            {\n              \"name\": \"unblockAccount\",\n              \"parameters\": [\n                {\n                  \"name\": \"account\",\n                  \"type\": \"Hash160\"\n                }\n              ],\n              \"returntype\": \"Boolean\",\n              \"offset\": 56,\n              \"safe\": false\n            }\n          ],\n          \"events\": []\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -8,\n      \"hash\": \"0x49cf4e5378ffcd4dec034fd98a174c5491e395e2\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0A=\",\n        \"checksum\": 983638438\n      },\n      \"manifest\": {\n        \"name\": \"RoleManagement\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"designateAsRole\",\n              \"parameters\": [\n                {\n                  \"name\": \"role\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"nodes\",\n                  \"type\": \"Array\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 0,\n              \"safe\": false\n            },\n            {\n              \"name\": \"getDesignatedByRole\",\n              \"parameters\": [\n                {\n                  \"name\": \"role\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"index\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Array\",\n              \"offset\": 7,\n              \"safe\": true\n            }\n          ],\n          \"events\": []\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    },\n    {\n      \"id\": -9,\n      \"hash\": \"0xfe924b7cfe89ddd271abaf7210a80a7e11178758\",\n      \"nef\": {\n        \"magic\": 860243278,\n        \"compiler\": \"neo-core-v3.0\",\n        \"tokens\": [],\n        \"script\": \"EEEa93tnQBBBGvd7Z0AQQRr3e2dAEEEa93tnQBBBGvd7Z0A=\",\n        \"checksum\": 2663858513\n      },\n      \"manifest\": {\n        \"name\": \"OracleContract\",\n        \"groups\": [],\n        \"supportedstandards\": [],\n        \"abi\": {\n          \"methods\": [\n            {\n              \"name\": \"finish\",\n              \"parameters\": [],\n              \"returntype\": \"Void\",\n              \"offset\": 0,\n              \"safe\": false\n            },\n            {\n              \"name\": \"getPrice\",\n              \"parameters\": [],\n              \"returntype\": \"Integer\",\n              \"offset\": 7,\n              \"safe\": true\n            },\n            {\n              \"name\": \"request\",\n              \"parameters\": [\n                {\n                  \"name\": \"url\",\n                  \"type\": \"String\"\n                },\n                {\n                  \"name\": \"filter\",\n                  \"type\": \"String\"\n                },\n                {\n                  \"name\": \"callback\",\n                  \"type\": \"String\"\n                },\n                {\n                  \"name\": \"userData\",\n                  \"type\": \"Any\"\n                },\n                {\n                  \"name\": \"gasForResponse\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 14,\n              \"safe\": false\n            },\n            {\n              \"name\": \"setPrice\",\n              \"parameters\": [\n                {\n                  \"name\": \"price\",\n                  \"type\": \"Integer\"\n                }\n              ],\n              \"returntype\": \"Void\",\n              \"offset\": 21,\n              \"safe\": false\n            },\n            {\n              \"name\": \"verify\",\n              \"parameters\": [],\n              \"returntype\": \"Boolean\",\n              \"offset\": 28,\n              \"safe\": true\n            }\n          ],\n          \"events\": [\n            {\n              \"name\": \"OracleRequest\",\n              \"parameters\": [\n                {\n                  \"name\": \"Id\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"RequestContract\",\n                  \"type\": \"Hash160\"\n                },\n                {\n                  \"name\": \"Url\",\n                  \"type\": \"String\"\n                },\n                {\n                  \"name\": \"Filter\",\n                  \"type\": \"String\"\n                }\n              ]\n            },\n            {\n              \"name\": \"OracleResponse\",\n              \"parameters\": [\n                {\n                  \"name\": \"Id\",\n                  \"type\": \"Integer\"\n                },\n                {\n                  \"name\": \"OriginalTx\",\n                  \"type\": \"Hash256\"\n                }\n              ]\n            }\n          ]\n        },\n        \"permissions\": [\n          {\n            \"contract\": \"*\",\n            \"methods\": \"*\"\n          }\n        ],\n        \"trusts\": [],\n        \"extra\": null\n      },\n      \"updatehistory\": [\n        0\n      ]\n    }\n  ]\n}\n```\n\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"method\": \"getnativecontracts\",\n\t\"params\": []\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145966.5938,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_d82547fb61654c998a3240e511d7e10f",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207912074,
      "created": 1598954329795,
      "url": "{{ node }}",
      "name": "getrawmempool",
      "description": "Obtains a list of confirmed / unconfirmed transactions in memory.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Examples\n\n##### Example 1 - Get verified transactions\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getrawmempool\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"0x9786cce0dddb524c40ddbdd5e31a41ed1f6b5c8a683c122f627ca4a007a7cf4e\",\n        \"0xb488ad25eb474f89d5ca3f985cc047ca96bc7373a6d3da8c0f192722896c1cd7\",\n        \"0xf86f6f2c08fbf766ebe59dc84bc3b8829f1053f0a01deb26bf7960d99fa86cd6\"\n    ]\n}\n```\n\nThese are the confirmed transactions received by nodes.\n\n##### Example 2 - Get verified and unverified transactions\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getrawmempool\",\n  \"params\": [true],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"height\": 5882071,\n    \"verified\": [\n      \"0x0c65fbfd2598aee5f30cd18f1264b458f1db137c4a460f4a174facb3f2d59d06\",\n      \"0xc8040c285aa495f5b5e5b3761fd9333899f4ed902951c46d86c3bbb1cb12f2c0\"\n    ],\n    \"unverified\": []\n  }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getrawmempool\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145965.8125,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_83d7e33461e94858afd88f487e89e583",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207913482,
      "created": 1598954339895,
      "url": "{{ node }}",
      "name": "getrawtransaction",
      "description": "Returns the corresponding transaction information based on the specified hash value.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n* txid: Transaction ID\n\n* verbose: Optional. The default value is 0. \n  * When verbose is 0, serialized information of the block is returned in a hexadecimal string. If you need the detailed information, use the SDK for deserialization. \n  * When verbose is 1, detailed information of the block is returned in Json format string.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getrawtransaction\",\n  \"params\": [\"0xdcdac54af951034bccc5079e8619f9ce9803a5e2fb90e351571657a62e38b28a\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"AA7aoUS2kokAAAAAACYcEwAAAAAARzMAAAHNWK7P0zW+HrPTEeHcgAlj39ctnwEAXQMA5AtUAgAAAAwUzViuz9M1vh6z0xHh3IAJY9/XLZ8MFM1Yrs/TNb4es9MR4dyACWPf1y2fE8AMCHRyYW5zZmVyDBS8r0HWhMfUrW7g2Z2pcHudHwyOZkFifVtSOAFCDEADRhUarLK+/BBjhqaWY5ieento21zgkcsUMWNCBWGd+v8a35zatNRgFbUkni4dDNI/BGc3zOgPT6EwroUsgvR+KQwhAv3yei642bBp1hrlpk26E7iWN8VC2MdMXWurST/mONaPC0GVRA14\"\n}\n```\n\nRequest body:\n\nWhen verbose = 1, the result in Json format is returned:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getrawtransaction\",\n  \"params\": [\"0xdcdac54af951034bccc5079e8619f9ce9803a5e2fb90e351571657a62e38b28a\", 1],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0xdcdac54af951034bccc5079e8619f9ce9803a5e2fb90e351571657a62e38b28a\",\n        \"size\": 252,\n        \"version\": 0,\n        \"nonce\": 1151457806,\n        \"sender\": \"NedjwsfAJYFas9rn8UHWQftTW4oKAQyW9h\",\n        \"sysfee\": \"9015990\",\n        \"netfee\": \"1252390\",\n        \"validuntilblock\": 13127,\n        \"signers\": [\n            {\n                \"account\": \"0x9f2dd7df630980dce111d3b31ebe35d3cfae58cd\",\n                \"scopes\": \"CalledByEntry\"\n            }\n        ],\n        \"attributes\": [],\n        \"script\": \"AwDkC1QCAAAADBTNWK7P0zW+HrPTEeHcgAlj39ctnwwUzViuz9M1vh6z0xHh3IAJY9/XLZ8TwAwIdHJhbnNmZXIMFLyvQdaEx9StbuDZnalwe50fDI5mQWJ9W1I4\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEADRhUarLK+/BBjhqaWY5ieento21zgkcsUMWNCBWGd+v8a35zatNRgFbUkni4dDNI/BGc3zOgPT6EwroUsgvR+\",\n                \"verification\": \"DCEC/fJ6LrjZsGnWGuWmTboTuJY3xULYx0xda6tJP+Y41o8LQZVEDXg=\"\n            }\n        ],\n        \"blockhash\": \"0x5f0b81b921eebf719f97e98e8c56e260db8720138b4a7def766b1498a3f4296b\",\n        \"confirmations\": 44,\n        \"blocktime\": 1605687708300,\n        \"vmstate\": \"HALT\"\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getrawtransaction\",\n\t\"params\": [\n\t\t\"0x34a5e5d04cd5d7ae28013b8c231ecd714be10efde14a9e68ff991ad10c766a9d\",\n\t\t1\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "disabled": false,
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145965.0312,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_341c16dc91774678b2b51dacd5ebfeb3",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207914729,
      "created": 1598954517813,
      "url": "{{ node }}",
      "name": "getstorage",
      "description": "Returns the stored value according to the contract script hash and the stored key.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n### Parameter Description\n\n* script_hash: Contract script hash or contract ID\n\n* key: The key to look up in storage (in hex string)\n\n## Example\n\nRequest body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"getstorage\",\n    \"params\": [\"0x99042d380f2b754175717bb932a911bc0bb0ad7d\", \"48656c6c6f\"],\n    \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"776f726c64\"\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getstorage\",\n\t\"params\": [\n\t\t\"0x99042d380f2b754175717bb932a911bc0bb0ad7d\",\n\t\t\"48656c6c6f\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145964.6406,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_66f536b96b824757a6f8a552babbed25",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207915890,
      "created": 1598954536705,
      "url": "{{ node }}",
      "name": "gettransactionheight",
      "description": "Returns the transaction height with the specified transaction hash.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\ntxid: Transaction id.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"gettransactionheight\",\n  \"params\": [\"9ae1fd32d525eff2a1bb1fc8d0cd2cfb4cc97a06a232bb87fc58e4fe3bc2a845\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": 251488\n}\n\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"gettransactionheight\",\n\t\"params\": [\n\t\t\"0x992de37d75f35423272037fbb01e3e2e97fc1ca6f8c896cb68785321b9f3fb13\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145964.5918,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_efa4a8a64d9144b5a0ba1cd19918232d",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207917238,
      "created": 1608650032828,
      "url": "{{ node }}",
      "name": "getcommittee",
      "description": "Gets the public key list of current Neo committee members.\n\n> Before you can invoke this method you must install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases).\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getcommittee\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"020f2887f41474cfeb11fd262e982051c1541418137c02a0f4961af911045de639\",\n        \"03204223f8c86b8cd5c89ef12e4f0dbb314172e9241e30c9ef2293790793537cf0\",\n        \"0222038884bbd1d8ff109ed3bdef3542e768eef76c1247aea8bc8171f532928c30\",\n        \"0226933336f1b75baa42d42b71d9091508b638046d19abd67f4e119bf64a7cfb4d\",\n        \"023a36c72844610b4d34d1968662424011bf783ca9d984efa19a20babf5582f3fe\",\n        \"03409f31f0d66bdc2f70a9730b66fe186658f84a8018204db01c106edc36553cd0\",\n        \"02486fd15702c4490a26703112a5cc1d0923fd697a33406bd5a1c00e0013b09a70\",\n        \"024c7b7fb6c310fccf1ba33b082519d82964ea93868d676662d4a59ad548df0e7d\",\n        \"02504acbc1f4b3bdad1d86d6e1a08603771db135a73e61c9d565ae06a1938cd2ad\",\n        \"03708b860c1de5d87f5b151a12c2a99feebd2e8b315ee8e7cf8aa19692a9e18379\",\n        \"0288342b141c30dc8ffcde0204929bb46aed5756b41ef4a56778d15ada8f0c6654\",\n        \"02a62c915cf19c7f19a50ec217e79fac2439bbaad658493de0c7d8ffa92ab0aa62\",\n        \"02aaec38470f6aad0042c6e877cfd8087d2676b0f516fddd362801b9bd3936399e\",\n        \"03b209fd4f53a7170ea4444e0cb0a6bb6a53c2bd016926989cf85f9b0fba17a70c\",\n        \"03b8d9d5771d8f513aa0869b9cc8d50986403b78c6da36890638c3d46a5adce04a\",\n        \"03c6aa6e12638b36e88adc1ccdceac4db9929575c3e03576c617c49cce7114a050\",\n        \"02ca0e27697b9c248f6f16e085fd0061e26f44da85b58ee835c110caa5ec3ba554\",\n        \"02cd5a5547119e24feaa7c2a0f37b8c9366216bab7054de0065c9be42084003c8a\",\n        \"03cdcea66032b82f5c30450e381e5295cae85c5e6943af716cc6b646352a6067dc\",\n        \"03d281b42002647f0113f36c7b8efb30db66078dfaaa9ab3ff76d043a98d512fde\",\n        \"02df48f60e8f3e01c48ff40b9b7f1310d7a8b2a193188befe1c2e3df740e895093\"\n    ]\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getcommittee\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145964.543,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_00174feb4baa4c23af82b51e29e6cdf3",
      "parentId": "fld_e8b88294c5de4dffb5841cd33f7cce40",
      "modified": 1640207918834,
      "created": 1623692680971,
      "url": "{{ node }}",
      "name": "getnextblockvalidators",
      "description": "Gets the validators list of the next block.\n\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getnextblockvalidators\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": [\n    {\n      \"publickey\": \"03aa052fbcb8e5b33a4eefd662536f8684641f04109f1d5e69cdda6f084890286a\",\n      \"votes\": \"0\",\n      \"active\": true\n    }\n  ]\n}\n```\n\n`result` returns an array containing multiple validators. Every validator contains information about the public key, the votes, and whether it is a validator or not.\n\n\nThe default vote of validator is 0 when voting has not started.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnextblockvalidators\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145964.3965,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_f528d25756b6400bb993c2ee77bf0978",
      "parentId": "fld_6f987752ccfb492ba863d505d132424c",
      "modified": 1640207921482,
      "created": 1598959879922,
      "url": "{{ node }}",
      "name": "listplugins",
      "description": "Returns a list of plugins loaded by the node.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"listplugins\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"name\": \"ApplicationLogs\",\n            \"version\": \"3.1.0.0\",\n            \"interfaces\": [\n                \"IPersistencePlugin\"\n            ]\n        },\n        {\n            \"name\": \"LevelDBStore\",\n            \"version\": \"3.1.0.0\",\n            \"interfaces\": [\n                \"IStoragePlugin\"\n            ]\n        },\n        {\n            \"name\": \"RpcNep5Tracker\",\n            \"version\": \"3.1.0.0\",\n            \"interfaces\": [\n                \"IPersistencePlugin\"\n            ]\n        },\n        {\n            \"name\": \"RpcServer\",\n            \"version\": \"3.1.0.0\",\n            \"interfaces\": []\n        },\n        {\n            \"name\": \"StatesDumper\",\n            \"version\": \"3.1.0.0\",\n            \"interfaces\": [\n                \"IPersistencePlugin\"\n            ]\n        },\n        {\n            \"name\": \"SystemLog\",\n            \"version\": \"3.1.0.0\",\n            \"interfaces\": [\n                \"ILogPlugin\"\n            ]\n        }\n    ]\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"listplugins\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146014.25,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_6f987752ccfb492ba863d505d132424c",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1640208083003,
      "created": 1598954070914,
      "name": "Node",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1598255139681,
      "_type": "request_group"
    },
    {
      "_id": "req_5bbfb269539b4392a5560278f6c335b3",
      "parentId": "fld_6f987752ccfb492ba863d505d132424c",
      "modified": 1640207922854,
      "created": 1598954266750,
      "url": "{{ node }}",
      "name": "getconnectioncount",
      "description": "Gets the current number of connections for the node.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"method\": \"getconnectioncount\",\n   \"params\":[],\n   \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n   \"jsonrpc\": \"2.0\",\n   \"id\": 1,\n   \"result\": 10\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getconnectioncount\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145964.25,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_2f7fa41d52104c7bbb1294aca6320c56",
      "parentId": "fld_6f987752ccfb492ba863d505d132424c",
      "modified": 1640207924155,
      "created": 1598954652675,
      "url": "{{ node }}",
      "name": "getpeers",
      "description": "Gets a list of nodes that the node is currently connected/disconnected from.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getpeers\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"unconnected\": [],\n        \"bad\": [],\n        \"connected\": [\n            {\n                \"address\": \"47.90.28.99\",\n                \"port\": 21333\n            },\n            {\n                \"address\": \"47.90.28.99\",\n                \"port\": 22333\n            }\n        ]\n    }\n}\n```\n\nResponse Description:\n\n- Unconnected: Nodes that are not currently connected.\n\n- Bad: Nodes that are no longer connected.\n\n- Connected: Nodes to which you are currently connected.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getpeers\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145961.125,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_9d6da549eb1440fdbe7219114e819edb",
      "parentId": "fld_6f987752ccfb492ba863d505d132424c",
      "modified": 1640207925682,
      "created": 1598954666257,
      "url": "{{ node }}",
      "name": "getversion",
      "description": "Returns the version information of the node.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getversion\",\n  \"params\": [],\n  \"id\": 3\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"3\",\n    \"result\": {\n        \"tcpport\": 12333,\n        \"wsport\": 12334,\n        \"nonce\": 1403108496,\n        \"useragent\": \"/Neo:3.0.0-preview3/\"\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getversion\",\n\t\"params\": [],\n\t\"id\": 3\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145959.5625,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_e0ce0865127c45b49b7b7f8643316d06",
      "parentId": "fld_6f987752ccfb492ba863d505d132424c",
      "modified": 1640207927060,
      "created": 1598954677176,
      "url": "{{ node }}",
      "name": "sendrawtransaction",
      "description": "Broadcasts transactions over the NEO network.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\nhex: A Base64-encoded string that has been serialized after the transaction signed in the program.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"sendrawtransaction\",\n  \"params\": [\"ALmNfAb4lqIAAAAAAAZREgAAAAAA8S8AAAEKo4e1Ppa3mJpjFDGgVt0fQKBC9gEAKQwFd29ybGQRwAwDcHV0DBR9rbALvBGpMrl7cXVBdSsPOC0EmUFifVtSAUIMQACXF48H1VRmI50ievPfC042rJgj7ZQ3Y4ff27abOpeclh+6KpsL6gWfZTAUyFOwdjkA7CWLM3HsovQeDQlI0oopDCEDzqPi+B8a+TUi0p7eTySh8L7erXKTOR0ziA9Uddl4eMkLQZVEDXg=\"],\n  \"id\": 1\n}\n```\n\nResponse body in successful cases:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0x13ccdb9f7eda95a24aa5a4841b24fed957fe7f1b944996cbc2e92a4fa4f1fa73\"\n    }\n}\n```\n\nResponse body in unsuccessful cases:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"error\": {\n        \"code\": -500,\n        \"message\": \"AlreadyExists\"\n    }\n}\n```\n\nResponse Description:\n\nWhen result is false, the current transaction has failed to broadcast and an exception occurs. In this example, a confirmed transaction is broadcast, which fails due to the double cost.\n\nThe following error codes can be expected:\n\n| Error codes | Message           | Description                                                  |\n| ----------- | ----------------- | ------------------------------------------------------------ |\n| 500         | AlreadyExists     | Block or transaction already exists and cannot be sent repeatedly. |\n|             | OutOfMemory       | The memory pool is full and no more transactions can be sent. |\n|             | UnableToVerify    | The block cannot be validated.                               |\n|             | Invalid           | The format or parameter is incorrect                         |\n|             | Expired           | The block information is expired                             |\n|             | InsufficientFunds | Insufficient funds                                           |\n|             | PolicyFail        | The behavior is not allowed (such as blacklist address trading) |\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"sendrawtransaction\",\n  \"params\": [\"ALmNfAb4lqIAAAAAAAZREgAAAAAA8S8AAAEKo4e1Ppa3mJpjFDGgVt0fQKBC9gEAKQwFd29ybGQRwAwDcHV0DBR9rbALvBGpMrl7cXVBdSsPOC0EmUFifVtSAUIMQACXF48H1VRmI50ievPfC042rJgj7ZQ3Y4ff27abOpeclh+6KpsL6gWfZTAUyFOwdjkA7CWLM3HsovQeDQlI0oopDCEDzqPi+B8a+TUi0p7eTySh8L7erXKTOR0ziA9Uddl4eMkLQZVEDXg=\"],\n  \"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.7812,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_2727868274f14b8e8bfa7665e3584b83",
      "parentId": "fld_6f987752ccfb492ba863d505d132424c",
      "modified": 1640207928874,
      "created": 1598954752252,
      "url": "{{ node }}",
      "name": "submitblock",
      "description": "Broadcasts a new block in the NEO network.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"submitblock\",\n  \"params\": [hex],\n  \"id\": 1\n}\n```\n\n### Parameter Description\n\nhex: A Base64-encoded string of a serialized block.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"submitblock\",\n  \"params\": [\"AAAAACMSKFbGpGl6t7uroMpi2ilhQd84eU/pUrRfQyswXYl76woLOY0oW1z4InfxoKyxFAAB+8FS6cRu2Pm0iaOiD8OMCnLadQEAAMgcAAD6lrDvowCyjK9dBALCmE1fvMuahQFCDEAd8EoEFBcxOLCZfh8w0tUEHHmyn++KzW4I8oeJ1WyMmjHVcolpNzOnAOzXTn/xujwy93gJ9ijvVo6wAF5qC3wCKxEMIQL4L//X3jDpIyMLze0sPNW+yFcufrrL3bnzOipdJpNLixELQRON768CAGUTt7+NSxXGAA7aoUS2kokAAAAAACYcEwAAAAAARzMAAAHNWK7P0zW+HrPTEeHcgAlj39ctnwEAXQMA5AtUAgAAAAwUzViuz9M1vh6z0xHh3IAJY9/XLZ8MFM1Yrs/TNb4es9MR4dyACWPf1y2fE8AMCHRyYW5zZmVyDBS8r0HWhMfUrW7g2Z2pcHudHwyOZkFifVtSOAFCDEADRhUarLK+/BBjhqaWY5ieento21zgkcsUMWNCBWGd+v8a35zatNRgFbUkni4dDNI/BGc3zOgPT6EwroUsgvR+KQwhAv3yei642bBp1hrlpk26E7iWN8VC2MdMXWurST/mONaPC0GVRA14\"],\n  \"id\": 1\n}\n```\n\nResponse body in successful cases:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0xbe153a2ef9e9160906f7054ed8f676aa223a826c4ae662ce0fb3f09d38b093c1\"\n    }\n}\n```\n\nResponse body in unsuccessful cases:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"error\": {\n        \"code\": -500,\n        \"message\": \"AlreadyExists\"\n    }\n}\n```\n\nResponse Description:\n\nWhen result is false, the block has failed to broadcast and an exception occurs. The following error codes can be expected\n\n| Error codes | Message           | Description                                                  |\n| ----------- | ----------------- | ------------------------------------------------------------ |\n| 500         | AlreadyExists     | Block or transaction already exists and cannot be sent repeatedly. |\n|             | OutOfMemory       | The memory pool is full and no more transactions can be sent. |\n|             | UnableToVerify    | The block cannot be validated.                               |\n|             | Invalid           | The format or parameter is incorrect                         |\n|             | Expired           | The block information is expired                             |\n|             | InsufficientFunds | Insufficient funds                                           |\n|             | PolicyFail        | The behavior is not allowed (such as blacklist address trading) |",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"submitblock\",\n\t\"params\": [\n\t\t\"hex\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.3906,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_0bce0b573d53482eb2011bb23e2e5dfa",
      "parentId": "fld_401dfdaae56c46f49ca6f4a829fa0a4a",
      "modified": 1640207930120,
      "created": 1598958113871,
      "url": "{{ node }}",
      "name": "invokefunction",
      "description": "Invokes a smart contract with its scripthash based on the specified operation and parameters and returns the result.\n\n> - This method is used to test your VM script as if they ran on the blockchain at that point in time. This RPC call does not affect the blockchain in any way.\n> - You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n* scripthash: Smart contract scripthash. You need to use the proper byte order of the address passed according to its data type. If the data type is Hash160, use the big endian scripthash; if the data type is ByteArray, use the little endian scripthash.\n\n* operation: The operation name (string)\n\n* params: Optional. The parameters to be passed into the smart contract operation\n\n* signers: Optional. List of contract signature accounts.\n\n  > You need to use the proper byte order of the address passed according to its data type. If the data type is Hash160, use the big endian script hash; if the data type is ByteArray, use the little endian scripthash.\n\n  * account: signature account\n  * scopes: signature's valid scopes, allowed values: FeeOnly, CalledByEntry, CustomContracts, CustomGroups, Global\n  * allowedcontracts: contracts of the signature can take effect, if scopes is CustomContracts\n  * allowedgroups: pubkeys of the signature can take effect, if scopes is CustomGroups\n  \n\nYou need to use the proper byte order of the address passed according to its data type. If the data type is Hash160, use the big endian script hash; if the data type is ByteArray, use the little endian scripthash.\n\nFor example:\n\n```json\n  {\n    \"type\": \"String\",\n    \"value\": \"Hello\"\n  }\n\n  {\n    \"type\": \"Hash160\",\n    \"value\": \"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\"\n  }\n\n  {\n    \"type\": \"ByteArray\",\n    \"value\": \"7472616e73666572\"\n  }\n```\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"invokefunction\",\n  \"params\": [\n    \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n    \"transfer\",\n    [\n      {\n        \"type\":\"Hash160\",\n        \"value\":\"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\"\n        },\n      {\n        \"type\":\"Hash160\",\n        \"value\":\"0x1f177332c467db9ba734d3ca85645fbadd7e13e3\"\n        },\n      {\n        \"type\":\"Integer\",\n        \"value\":\"8\"\n        }        \n    ],\n    [\n        {\n          \"account\": \"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\n          \"scopes\": \"CalledByEntry\",\n          \"allowedcontracts\":[],\n          \"allowedgroups\":[]\n        }\n    ]\n  ]\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"script\": \"180c14e3137eddba5f6485cad334a79bdb67c43273171f0c141c0357464b777ecf6b5f3ac3893ace1f8b1621f613c00c087472616e736665720c14bcaf41d684c7d4ad6ee0d99da9707b9d1f0c8e6641627d5b52\",\n        \"state\": \"HALT\",\n        \"gasconsumed\": \"9007960\",\n        \"stack\": [\n            {\n                \"type\": \"Boolean\",\n                \"value\": true\n            }\n        ],\n        \"tx\": null\n    }\n}\n```\n\nResponse description:\n\n- script: the invocation script of the contract. By reference to [OpCodeConverter](https://github.com/chenzhitong/OpCodeConverter) you can convert the script to the following OpCode (NeoVM is a stack-based virtual machine that executes from bottom to top when executing):\n\n  ```\n  PUSHINT16 8\n  PUSHDATA1 0x1f177332c467db9ba734d3ca85645fbadd7e13e3\n  PUSHDATA1 0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\n  PUSHDATA1 transfer\n  PUSHDATA1 0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\n  SYSCALL System.Contract.Call\n  ```\n\n- state:  `HALT` means the vm executed successfully, and`FAULT` means the vm exited due to an exception. \n\n- gasconsumed: the system fee consumed for invocation.\n\n- stack: the contract execution result. If the value is String or ByteArray, it is encoded by Base64.\n\n- tx: the transaction's hex string of this invocation, need open wallet and added signers correctly.\n\n> After entering the `invokefunction` command,  the node invokes the `operation` method, and pass `params` as arguments. If `operation` and `params` are not processed in the contract, the expected result cannot be returned.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"method\": \"invokefunction\",\n\t\"params\": [\n\t\t\"0xfffdc93764dbaddd97c48f252a53ea4643faa3fd\",\n\t\t\"getContract\",\n\t\t[{\n\t\t\t\"type\": \"Hash160\",\n\t\t\t\"value\": \"0xd2a4cff31913016155e38e474a2c06d08be276cf\"\n\t\t}]\n\t]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.1953,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_401dfdaae56c46f49ca6f4a829fa0a4a",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1640208084886,
      "created": 1598954080799,
      "name": "Contract",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1598255139668.5,
      "_type": "request_group"
    },
    {
      "_id": "req_a649afb0d34c4c0380a99d830e00266e",
      "parentId": "fld_401dfdaae56c46f49ca6f4a829fa0a4a",
      "modified": 1640207932211,
      "created": 1639254151203,
      "url": "{{ node }}",
      "name": "invokecontractverify",
      "description": "Invokes the contract method `Verify`. Unlike the method `invokefunction` which executes the contract by the Application trigger, `invokecontractverify` executes the contract by the Verification trigger and can pass parameters as `params` and `signers`. Specific parameter type and number depend on the smart contract to invoke.\n\n> - This method is used to test your VM script as if they ran on the blockchain at that point in time. This RPC call does not affect the blockchain in any way.\n> - You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- scripthash: Smart contract scripthash.\n\n- params: The parameters to be passed to the smart contract operation. It must be an empty array [] as by default Neo only accepts the verify function without parameter.\n\n- signers: Optional. List of contract signature accounts.\n  * account: signature account\n  * scopes: signature's valid scopes, allowed values: FeeOnly, CalledByEntry, CustomContracts, CustomGroups, Global\n  * allowedcontracts: contracts of the signature can take effect, if scopes is CustomContracts\n  * allowedgroups: pubkeys of the signature can take effect, if scopes is CustomGroups\n  \n  > You need to use the proper byte order of the address passed according to its data type. If the data type is Hash160, use the big endian script hash; if the data type is ByteArray, use the little endian scripthash.\n  \n  For example:\n  \n    ```json\n    {\n      \"type\": \"String\",\n      \"value\": \"Hello\"\n    }\n  \n    {\n      \"type\": \"Hash160\",\n      \"value\": \"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\"\n    }\n  \n    {\n      \"type\": \"ByteArray\",\n      \"value\": \"7472616e73666572\"\n    }\n    ```\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"invokecontractverify\",\n  \"params\": [ \n  \"0x92f5c79b88560584a900cfec15b0e00dc4d58b54\", \n  [ ],\n  [\n      {\n        \"account\": \"NTpqYncLsNNsMco71d9qrd5AWXdCq8YLAA\",\n        \"scopes\": \"CalledByEntry\"\n      }\n  ]\n],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"script\": \"VgEMFFbIjRQK0swPKQN90Qp/AGCitShcYEBXAANAQZv2Z84MBWhlbGxvDAV3b3JsZFNB5j8YhEBXAQAMFFbIjRQK0swPKQN90Qp/AGCitShcQfgn7IxwaEA=\",\n    \"state\": \"HALT\",\n    \"gasconsumed\": \"1017810\",\n    \"exception\": null,\n    \"stack\": [\n      {\n        \"type\": \"Boolean\",\n        \"value\": true\n      }\n    ]\n  }\n}\n```\n\nResponse description:\n\n- script: the invocation script of the contract. You can convert it to OpCode at [Neo 3.0 data converter](https://neo.org/converter).\n- state: `HALT` means the vm executed successfully, and`FAULT` means the vm exited due to an exception. \n- gasconsumed: the system fee consumed for invocation.\n- stack: the contract execution result. If the value is String or ByteArray, it is encoded by Base64.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"invokecontractverify\",\n\t\"params\": [\n\t\t\"0x92f5c79b88560584a900cfec15b0e00dc4d58b54\",\n\t\t[\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\t\"account\": \"NTpqYncLsNNsMco71d9qrd5AWXdCq8YLAA\",\n\t\t\t\t\"scopes\": \"CalledByEntry\"\n\t\t\t}\n\t\t]\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.177,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_92cf02dcf7424461adaf498c626bbcf0",
      "parentId": "fld_401dfdaae56c46f49ca6f4a829fa0a4a",
      "modified": 1640207933691,
      "created": 1598959384420,
      "url": "{{ node }}",
      "name": "invokescript",
      "description": "Returns the result after passing a script through the VM.\n\n> - This method is to test your VM script as if they ran on the blockchain at that point in time. This RPC call does not affect the blockchain in any way.\n> - You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n### Parameter Description\n\n- script: A script runnable in the VM. This is the same script that is returned in invokefunction\n- signers: list of contract signature accounts\n  * account: signature account\n  * scopes: signature's valid scopes, allowed values: FeeOnly, CalledByEntry, CustomContracts, CustomGroups, Global\n  * allowedcontracts: contracts of the signature can take effect, if scopes is CustomContracts\n  * allowedgroups: pubkeys of the signature can take effect, if scopes is CustomGroups\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"invokescript\",\n  \"params\": [\n    \"180c14e3137eddba5f6485cad334a79bdb67c43273171f0c141c0357464b777ecf6b5f3ac3893ace1f8b1621f613c00c087472616e736665720c14bcaf41d684c7d4ad6ee0d99da9707b9d1f0c8e6641627d5b52\",\n    [\n         {\n          \"account\": \"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\n          \"scopes\": \"CustomContracts\",\n          \"allowedcontracts\":[\"0xde5f57d430d3dece511cf975a8d37848cb9e0525\",\"0x1f177332c467db9ba734d3ca85645fbadd7e13e3\",\"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\"],\n          \"allowedgroups\":[]\n        }\n    ]\n  ]\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"script\": \"180c14e3137eddba5f6485cad334a79bdb67c43273171f0c141c0357464b777ecf6b5f3ac3893ace1f8b1621f613c00c087472616e736665720c14bcaf41d684c7d4ad6ee0d99da9707b9d1f0c8e6641627d5b52\",        \n        \"state\": \"HALT\",\n        \"gasconsumed\": \"9007960\",\n        \"stack\": [\n            {\n                \"type\": \"Boolean\",\n                \"value\": true\n            }\n        ],\n        \"tx\": \"0068f10067587389000000000046e71300000000008d1e2000011c0357464b777ecf6b5f3ac3893ace1f8b1621f6100325059ecb4878d3a875f91c51ceded330d4575fdee3137eddba5f6485cad334a79bdb67c43273171fbcaf41d684c7d4ad6ee0d99da9707b9d1f0c8e660054180c14e3137eddba5f6485cad334a79bdb67c43273171f0c141c0357464b777ecf6b5f3ac3893ace1f8b1621f613c00c087472616e736665720c14bcaf41d684c7d4ad6ee0d99da9707b9d1f0c8e6641627d5b5201420c40840c3de238b0b876bf78bc5f83f4f42b8652554925a33d8728e2ecd2e3f7c9abfdb6c7b45a8d5a033616c97fb0c8cd26d810c819a336bb3682a9caf87a852674290c210222d8515184c7d62ffa99b829aeb4938c4704ecb0dd7e340e842e9df1218263430b4195440d78\"\n    }\n}\n```\n\n- state:  `HALT` means the vm executed successfully, and`FAULT` means the vm exited due to an exception. \n\n- gasconsumed: the system fee consumed for invocation.\n\n- stack: the contract execution result. If the value is String or ByteArray, it is encoded by Base64.\n\n- tx: the transaction's hex string of this invocation, need open wallet and added signers correctly.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"method\": \"invokescript\",\n\t\"params\": [\n\t\t\"MGMwMWJkMTEwYzE0YjVjYjNlNzZkNmNmMDQ0YmI4MzQzN2Q5OWYzYmYwYTkyYWJmYTJhYjBjMTRkZGZmNDE2ZDVlNGE3MTljMTY3N2M4YWM5YjEzMjkxNjZiZDcyN2U4MTRjMDFmMGMwODc0NzI2MTZlNzM2NjY1NzIwYzE0ZjU2M2VhNDBiYzI4M2Q0ZDBlMDVjNDhlYTMwNWIzZjJhMDczNDBlZjQxNjI3ZDViNTI=\",\n\t\t[\n\t\t\t{\n\t\t\t\t\"account\": \"e827d76b1629139bacc877169c714a5e6d41ffdd\",\n\t\t\t\t\"scopes\": \"CalledByEntry\"\n\t\t\t}\n\t\t]\n\t]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.1587,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_9a7b5ab3c1014a6da7b17377b86abbcc",
      "parentId": "fld_437f39d61a6d430792c6bac7422bc36b",
      "modified": 1640207935115,
      "created": 1639253896500,
      "url": "{{ node }}",
      "name": "getnep11balances",
      "description": "Returns the balance of all NEP11 assets in the specified address.\n\nYou must install the plugin [TokensTracker](https://github.com/neo-project/neo-modules/releases), [LevelDBStore](https://github.com/neo-project/neo-modules/releases), and [RpcSever](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\naddress: The address that you want to query balance.\n\n## Configuration\n\nBefore invoking the method, you need to modify the following fields in the TokensTracker config.json file:\n\n- MaxResults: The maximum number of records. The exceeding portion will not be stored.\n- Network: Set it to the same value as Network in Neo-CLI config.json.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getnep11balances\",\n  \"params\": [\"NdUL5oDPD159KeFpD5A9zw5xNF1xLX6nLT\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"address\": \"NdUL5oDPD159KeFpD5A9zw5xNF1xLX6nLT\",\n        \"balance\": [\n            {\n                \"assethash\": \"0xb3b65e5c0d2af3f98cac6e80083f6c2b90476f40\",\n                \"tokens\": [\n                    {\n                        \"tokenid\": \"426c696e6420426f782032\",\n                        \"amount\": \"1\",\n                        \"lastupdatedblock\": 36653\n                    },\n                    {\n                        \"tokenid\": \"426c696e6420426f782033\",\n                        \"amount\": \"1\",\n                        \"lastupdatedblock\": 37100\n                    },\n                    {\n                        \"tokenid\": \"426c696e6420426f782031323635\",\n                        \"amount\": \"1\",\n                        \"lastupdatedblock\": 501483\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\n> - Only when your client synchronizes to the block that the contract was deployed, execution of this API will return the correct value, otherwise execution of the API will result in an error. \n> - When the input parameter is a script hash of a non-NEP11 smart contract, execution of the API will result in an error. \n> - Make sure your client has been fully synchronized to the latest block height before using this API, otherwise the balance returned may not be up-to-date.\n\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnep11balances\",\n\t\"params\": [\n\t\t\"NdUL5oDPD159KeFpD5A9zw5xNF1xLX6nLT\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.0151,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_437f39d61a6d430792c6bac7422bc36b",
      "parentId": "fld_55a00d8890f142b78eb08dff0f5ace5b",
      "modified": 1639253852008,
      "created": 1639253845498,
      "name": "NEP-11",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1639253845598,
      "_type": "request_group"
    },
    {
      "_id": "fld_55a00d8890f142b78eb08dff0f5ace5b",
      "parentId": "fld_abea0729450846ee9b90f4df5b8051ac",
      "modified": 1639253832030,
      "created": 1639253832030,
      "name": "TokensTracker",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1639253832030,
      "_type": "request_group"
    },
    {
      "_id": "fld_abea0729450846ee9b90f4df5b8051ac",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1640208086170,
      "created": 1598954093763,
      "name": "Plugin",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1598255139662.25,
      "_type": "request_group"
    },
    {
      "_id": "req_569391e32ebb4add910f214c9433d5bc",
      "parentId": "fld_437f39d61a6d430792c6bac7422bc36b",
      "modified": 1640207936312,
      "created": 1639254059719,
      "url": "{{ node }}",
      "name": "getnep11properties",
      "description": "Gets the customized properties of the NEP-11 token, where the name, description, image, and tokenURI properties are automatically decoded by UTF8.\n\n> You must install the plugin [TokensTracker](https://github.com/neo-project/neo-modules/releases), [LevelDBStore](https://github.com/neo-project/neo-modules/releases), and [RpcSever](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- contract: The contract hash\n\n- tokenId: The  hex string of token id\n\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getnep11properties\",\n  \"params\": [\"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\"452023313032204e6f697a\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"name\": \"E #102 Noiz\",\n        \"owner\": \"wJjkrPCyCQ3Rbss9WN5CaocVhRs=\",\n        \"number\": \"Zg==\",\n        \"image\": \"https://neo.org/Noiz.png\",\n        \"video\": null\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnep11properties\",\n\t\"params\": [\n\t\t\"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n\t\t\"452023313032204e6f697a\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145945.5205,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_8c10fae84425498e926aa22c299d2cfb",
      "parentId": "fld_437f39d61a6d430792c6bac7422bc36b",
      "modified": 1640207937801,
      "created": 1639254012329,
      "url": "{{ node }}",
      "name": "getnep11transfers",
      "description": "Returns all the NEP11 transaction information occurred in the specified address.\n\n> You must install the plugin [TokensTracker](https://github.com/neo-project/neo-modules/releases), [LevelDBStore](https://github.com/neo-project/neo-modules/releases), and [RpcSever](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- address: The address to query the transaction information.\n\n- startTime | endTime: Optional. The UTC timestamp which records the asset start or end  time (included).\n  - If start and end timestamps are specified, transactions occurred in the time range are returned.\n  - If only one timestamp is specified, transactions occurred since that time are returned.\n  - If not specified, transactions in recent seven days are returned.\n\n## Configuration\n\nBefore invoking the method, you need to modify the following fields in the TokensTracker config.json file:\n\n- MaxResults: The maximum number of records. The exceeding portion will not be stored.\n- Network: Set it to the same value as Network in Neo-CLI config.json.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getnep11transfers\",\n  \"params\": [\"NdUL5oDPD159KeFpD5A9zw5xNF1xLX6nLT\",1635146038919],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"address\": \"NdUL5oDPD159KeFpD5A9zw5xNF1xLX6nLT\",\n        \"sent\": [\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 0,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420412023343838\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": \"NNNPy5qxVD9yW2BavkwLdDybbR88NdvaGi\",\n                \"amount\": \"1000\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 1,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420422023313734\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": \"NNNPy5qxVD9yW2BavkwLdDybbR88NdvaGi\",\n                \"amount\": \"10000\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 2,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420432023313238\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 3,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420442023363731\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 4,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420452023353832\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 5,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e74204620233736\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 6,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420472023333534\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 7,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e7420482023363432\"\n            },\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 8,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"467261676d656e742049202331323539\"\n            }\n        ],\n        \"received\": [\n            {\n                \"timestamp\": 1635146038919,\n                \"assethash\": \"0xd9e2093de3dc2ef7cf5704ceec46ab7fadd48e7f\",\n                \"transferaddress\": null,\n                \"amount\": \"1\",\n                \"blockindex\": 540423,\n                \"transfernotifyindex\": 9,\n                \"txhash\": \"0x683998f3a06b44be7b80be517bffda130de1fe75feae7b6e58d8372266fd87f6\",\n                \"tokenid\": \"4e20233134204e65726f\"\n            }\n        ]\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnep11transfers\",\n\t\"params\": [\n\t\t\"NdUL5oDPD159KeFpD5A9zw5xNF1xLX6nLT\",\n\t\t1635146038919\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145933.026,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_15c60c6db64d41bd9a22fe8547625824",
      "parentId": "fld_f06e91185b7a4ab88c1543622a1c7bb2",
      "modified": 1640207939891,
      "created": 1598959677496,
      "url": "{{ node }}",
      "name": "getnep17balances",
      "description": "Returns the balance of all NEP-17 assets in the specified address.\n\n> You must install the plugin [TokensTracker](https://github.com/neo-project/neo-plugins/releases) and [LevelDBStore](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\naddress: The address that you want to query balance.\n\n## Example\n\nRequest bodyï¼š\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getnep5balances\",\n  \"params\": [\"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\", 0],\n  \"id\": 1\n}\n```\n\nResponse bodyï¼š\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"balance\": [\n            {\n                \"assethash\": \"0x8d06bc235c2585c9d27ede8ed7085b3e13fc0c36\",\n                \"amount\": \"9990000000000000\",\n                \"lastupdatedblock\": 17418\n            },\n            {\n                \"assethash\": \"0x8c23f196d8a1bfd103a9dcb1f9ccf0c611377d3b\",\n                \"amount\": \"1002531616708175\",\n                \"lastupdatedblock\": 54499\n            },\n            {\n                \"assethash\": \"0x9bde8f209c88dd0e7ca3bf0af0f476cdd8207789\",\n                \"amount\": \"9999785\",\n                \"lastupdatedblock\": 54496\n            },\n            {\n                \"assethash\": \"0x433f0891e80c107b9e63d5f5b7cddf1fc35eb0b9\",\n                \"amount\": \"9999200000000000\",\n                \"lastupdatedblock\": 19810\n            },\n            {\n                \"assethash\": \"0x9c33bbf2f5afbbc8fe271dd37508acd93573cffc\",\n                \"amount\": \"9995000000000000\",\n                \"lastupdatedblock\": 17145\n            }\n        ],\n        \"address\": \"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\"\n    }\n}\n```\n\n\n>- Only when your client synchronizes to the block that the contract was deployed, execution of this API will return the correct value, otherwise execution of the API will result in an error. \n> - When the input parameter is a script hash of a non-NEP-5 smart contract, execution of the API will result in an error. \n>- Make sure your client has been fully synchronized to the latest block height before using this API, otherwise the balance returned may not be up-to-date.\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnep17balances\",\n\t\"params\": [\n\t\t\"NRXwvETAzzWSuGN1oBVHUKggG4bkpz9gUN\",\n\t\t0\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.0244,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_f06e91185b7a4ab88c1543622a1c7bb2",
      "parentId": "fld_55a00d8890f142b78eb08dff0f5ace5b",
      "modified": 1639253848591,
      "created": 1623692773502,
      "name": "NEP-17",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1639253845548,
      "_type": "request_group"
    },
    {
      "_id": "req_3d15cbcd73494c47aff098b5029dd09c",
      "parentId": "fld_f06e91185b7a4ab88c1543622a1c7bb2",
      "modified": 1640207941187,
      "created": 1598959710575,
      "url": "{{ node }}",
      "name": "getnep17transfers",
      "description": "Returns all the NEP-17 transaction information occurred in the specified address.\n\n> You must install the plugin [TokensTracker](https://github.com/neo-project/neo-plugins/releases) and [LevelDBStore](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\naddressï¼šThe address to query the transaction information.\n\ntimestamp (Optional): \n\n- If start and end timestamps are specified, transactions occurred in the time range are returned.\n- If only one timestamp is specified, transactions occurred since that time are returned.\n- If not specified, transactions in recent seven days are returned.\n\n## Example\n\n##### Example 1 - no timestamp is specified:\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getnep5transfers\",\n  \"params\": [\"NNSri1QcdtidykMxryz1xpmzSFwEXeYohH\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"sent\": [],\n        \"received\": [\n            {\n                \"timestamp\": 1579170709527,\n                \"assethash\": \"0x9bde8f209c88dd0e7ca3bf0af0f476cdd8207789\",\n                \"transferaddress\": \"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\",\n                \"amount\": \"100\",\n                \"blockindex\": 54496,\n                \"transfernotifyindex\": 0,\n                \"txhash\": \"0x49f40ea86de140849fc5eb1c1ab8dbbe4d1186c47807963a162338d979e79c0f\"\n            },\n            {\n                \"timestamp\": 1579170725318,\n                \"assethash\": \"0x8c23f196d8a1bfd103a9dcb1f9ccf0c611377d3b\",\n                \"transferaddress\": \"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\",\n                \"amount\": \"10000000000\",\n                \"blockindex\": 54499,\n                \"transfernotifyindex\": 0,\n                \"txhash\": \"0x1c25607fda68a2ab5793fb83b5bc87f781afb310127b440620b4ad176d77fa3d\"\n            }\n        ],\n        \"address\": \"NNSri1QcdtidykMxryz1xpmzSFwEXeYohH\"\n    }\n}\n```\n\n##### Example 2 - start and end timestamps are specified:\n\nRequest body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"getnep5transfers\",\n    \"params\": [\"NNSri1QcdtidykMxryz1xpmzSFwEXeYohH\", 1579170709528, 1579170725319],\n    \"id\": 1\n}\n```\n\nResponse body: \n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"sent\": [],\n        \"received\": [\n            {\n                \"timestamp\": 1579170725318,\n                \"assethash\": \"0x8c23f196d8a1bfd103a9dcb1f9ccf0c611377d3b\",\n                \"transferaddress\": \"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\",\n                \"amount\": \"10000000000\",\n                \"blockindex\": 54499,\n                \"transfernotifyindex\": 0,\n                \"txhash\": \"0x1c25607fda68a2ab5793fb83b5bc87f781afb310127b440620b4ad176d77fa3d\"\n            }\n        ],\n        \"address\": \"NNSri1QcdtidykMxryz1xpmzSFwEXeYohH\"\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnep17transfers\",\n\t\"params\": [\n\t\t\"NLMJ4S5ZKzQmermQHETe7qV6Dp9ESLyX2F\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145908.0244,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_1270627ae9474c82ab8381a9ab554033",
      "parentId": "fld_5195a0a6f0754364af7cd680967d7e2b",
      "modified": 1640207943002,
      "created": 1598959634028,
      "url": "{{ node }}",
      "name": "getapplicationlog",
      "description": "Returns the contract event information based on the specified txid. The contract event information is stored under the ApplicationLogs directory.\n\n> You must install the plugins [ApplicationLogs](https://github.com/neo-project/neo-modules/releases) and [LevelDBStore](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- txid: Transaction ID\n\n- trigger type:  Optional. It has the following options:\n\n  - OnPersist\n  - PostPersist\n  - Application\n  - Verification\n  - System: OnPersist | PostPersist\n  - All: OnPersist | PostPersist | Verification | Application\n\n  It defaults to All. You can specify a trigger type.\n\n## Example\n\nRequest body 1ï¼š\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"getapplicationlog\",\n  \"params\": [\n    \"0xd6ea48f1c33defc1815562b3ace4ead99bf33a8ae67b2642cf73c2f192a717e5\"\n  ]\n}\n```\n\nResponse body 1:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"txid\": \"0xd6ea48f1c33defc1815562b3ace4ead99bf33a8ae67b2642cf73c2f192a717e5\",\n        \"executions\": [\n            {\n                \"trigger\": \"Application\",\n                \"vmstate\": \"HALT\",\n                \"gasconsumed\": \"9007990\",\n                \"stack\": [],\n                \"notifications\": [\n                    {\n                        \"contract\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                        \"eventname\": \"Transfer\",\n                        \"state\": {\n                            \"type\": \"Array\",\n                            \"value\": [\n                                {\n                                    \"type\": \"Any\"\n                                },\n                                {\n                                    \"type\": \"ByteString\",\n                                    \"value\": \"9S37k0BBDIaRxjEhW0Sk+9lDN4s=\"\n                                },\n                                {\n                                    \"type\": \"Integer\",\n                                    \"value\": \"400000000\"\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"contract\": \"0xde5f57d430d3dece511cf975a8d37848cb9e0525\",\n                        \"eventname\": \"Transfer\",\n                        \"state\": {\n                            \"type\": \"Array\",\n                            \"value\": [\n                                {\n                                    \"type\": \"ByteString\",\n                                    \"value\": \"9S37k0BBDIaRxjEhW0Sk+9lDN4s=\"\n                                },\n                                {\n                                    \"type\": \"ByteString\",\n                                    \"value\": \"1rSxahaE1EDW2TzNNlNk0rjQEpI=\"\n                                },\n                                {\n                                    \"type\": \"Integer\",\n                                    \"value\": \"1\"\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\nRequest body 2ï¼š\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"getapplicationlog\",\n  \"params\": [\n    \"0x0745a04ddb7803ebd549af4d80de03fc69349b0b77615a06d9ef052637de5931\", \"System\"\n  ]\n}\n\n```\n\nResponse body 2ï¼š\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"blockhash\": \"0x0745a04ddb7803ebd549af4d80de03fc69349b0b77615a06d9ef052637de5931\",\n        \"executions\": [\n            {\n                \"trigger\": \"System\",\n                \"vmstate\": \"HALT\",\n                \"gasconsumed\": \"2031260\",\n                \"stack\": [],\n                \"notifications\": [\n                    {\n                        \"contract\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                        \"eventname\": \"Transfer\",\n                        \"state\": {\n                            \"type\": \"Array\",\n                            \"value\": [\n                                {\n                                    \"type\": \"ByteString\",\n                                    \"value\": \"1rSxahaE1EDW2TzNNlNk0rjQEpI=\"\n                                },\n                                {\n                                    \"type\": \"Any\"\n                                },\n                                {\n                                    \"type\": \"Integer\",\n                                    \"value\": \"11384830\"\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"contract\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                        \"eventname\": \"Transfer\",\n                        \"state\": {\n                            \"type\": \"Array\",\n                            \"value\": [\n                                {\n                                    \"type\": \"Any\"\n                                },\n                                {\n                                    \"type\": \"ByteString\",\n                                    \"value\": \"1rSxahaE1EDW2TzNNlNk0rjQEpI=\"\n                                },\n                                {\n                                    \"type\": \"Integer\",\n                                    \"value\": \"2376840\"\n                                }\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                \"trigger\": \"System\",\n                \"vmstate\": \"HALT\",\n                \"gasconsumed\": \"2031260\",\n                \"stack\": [],\n                \"notifications\": [\n                    {\n                        \"contract\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                        \"eventname\": \"Transfer\",\n                        \"state\": {\n                            \"type\": \"Array\",\n                            \"value\": [\n                                {\n                                    \"type\": \"Any\"\n                                },\n                                {\n                                    \"type\": \"ByteString\",\n                                    \"value\": \"1rSxahaE1EDW2TzNNlNk0rjQEpI=\"\n                                },\n                                {\n                                    \"type\": \"Integer\",\n                                    \"value\": \"25000000\"\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\nResponse descriptionï¼š\ngasconsumed: The transaction fee, which means the gas consumed in the transaction execution. \n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getapplicationlog\",\n\t\"params\": [\n\t\t\"0xc0885a1132ce1fbbc87777adf44cd26f373ef4a5154264f485b5276f3bca9b5d\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.0488,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_5195a0a6f0754364af7cd680967d7e2b",
      "parentId": "fld_abea0729450846ee9b90f4df5b8051ac",
      "modified": 1623692794188,
      "created": 1623692753803,
      "name": "Application Logs",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1623692773552,
      "_type": "request_group"
    },
    {
      "_id": "req_3377ffde7c30490fa68ce57f2138d3a7",
      "parentId": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "modified": 1640207944211,
      "created": 1623692744349,
      "url": "{{ node }}",
      "name": "getstateheight",
      "description": "Queries the stateroot height.\n\n> You must install the plugin  [StateService](https://github.com/neo-project/neo-plugins/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getstateheight\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"localrootindex\": 602,\n        \"validatedrootindex\": 602\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getstateheight\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146008.0366,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "parentId": "fld_abea0729450846ee9b90f4df5b8051ac",
      "modified": 1623692759055,
      "created": 1623692759055,
      "name": "StateService",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1623692759055,
      "_type": "request_group"
    },
    {
      "_id": "req_d83ffe64019243fe8794537f352a7754",
      "parentId": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "modified": 1640207947211,
      "created": 1623692728768,
      "url": "{{ node }}",
      "name": "getstateroot",
      "description": "Queries the state root by the block height.\n\n> You must install the plugin [StateService](https://github.com/neo-project/neo-plugins/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- index: Block index\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getstateroot\",\n  \"params\": [160],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"version\": 0,\n        \"index\": 160,\n        \"roothash\": \"0x28870d1ed61ef167e99354249c622504b0d81d814eaa87dbf8612c91b9b303b7\",\n        \"witness\": {\n            \"invocation\": \"DEDN8o6cmOUt/pfRIexVzO2shhX2vTYFd+cU8vZDQ2Dvn3pe/vHcYOSlY3lPRKecb5zBuLCqaKSvZsC1FAbT00dWDEDoPojyFw66R+pKQsOy0MFmeBBgaC6Z1XGLAigVDHi2VuhAxfpwFpXSTUv3Uv5cIOY+V5g40+2zpU19YQIAWyOJDEDPfitQTjK90KnrloPXKvgTNFPn1520dxDCzQxhl/Wfp7S8dW91/3x3GrF1EaIi32aJtF8W8jUH1Spr/ma66ISs\",\n            \"verification\": \"EwwhAwAqLhjDnN7Qb8Yd2UoHuOnz+gNqcFvu+HZCUpVOgtDXDCECAM1gQDlYokm5qzKbbAjI/955zDMJc2eji/a1GIEJU2EMIQKXhyDsbFxYdeA0d+FsbZj5AQhamA13R64ysGgh19j6UwwhA8klCeQozdf3pP3UqXxniRC0DxRl3d5PBJ9zJa8zgHkpFAtBE43vrw==\"\n        }\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getstateroot\",\n\t\"params\": [\n\t\t0\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145958.0366,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_d3b8a104c995475a9dc219c76fcbcc9f",
      "parentId": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "modified": 1640207949092,
      "created": 1639254197771,
      "url": "{{ node }}",
      "name": "getstate",
      "description": "Queries the state by the root hash, contract hash and storage key.\n\n> You must install the plugin  [StateService](https://github.com/neo-project/neo-modules/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameters\n\n- roothash: The root hash of state root.\n\n- scripthash: The contract hash.\n\n- key: The storage key value encoded by Base64.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getstate\",\n  \"params\": [\"0xec31cdb14da4143e2ab471a8b5812d895b88fc1c12d54e112791491feca9b5f4\",\"0xb1fbb6b0096919071769906bb23b2ca2ec51eea7\",\"AQFM8QSIkBuHVYOd2kiRmQXXOI833w==\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"nMJ4AQ==\"\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getstate\",\n\t\"params\": [\n\t\t\"0xec31cdb14da4143e2ab471a8b5812d895b88fc1c12d54e112791491feca9b5f4\",\n\t\t\"0xb1fbb6b0096919071769906bb23b2ca2ec51eea7\",\n\t\t\"AQFM8QSIkBuHVYOd2kiRmQXXOI833w==\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145908.0337,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_5e9eac4f15f0464d800787275526a46b",
      "parentId": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "modified": 1640207950932,
      "created": 1639254190706,
      "url": "{{ node }}",
      "name": "findstates",
      "description": "Queries the desired state by the root hash, contract hash and storage key prefix.\n\n> You must install the plugin  [StateService](https://github.com/neo-project/neo-modules/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameters\n\n- roothash: The root hash of state root.\n\n- scripthash: The contract hashã€‚\n\n- prefix: The prefix of storage key, Base64-encoded.\n\n- key: Optional. Returns the Base64-encoded key at the start of the result, with no information about the key in the result, but the result after the key.\n\n- count: Optional. The count of returned items. \n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"findstates\",\n  \"params\": [\"0xec31cdb14da4143e2ab471a8b5812d895b88fc1c12d54e112791491feca9b5f4\",\"0xb1fbb6b0096919071769906bb23b2ca2ec51eea7\",\"AQE=\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"firstProof\": \"GgEAAAABAUzxBIiQG4dVg53aSJGZBdc4jzffBlIAA1GZMg/ZG96bUUsFRwyZwD2mw/kkKd2sO8mj7AKs5yqSBAQEBAQEBAQEBAQEBAQD7/elUnvysLKgzT96xy6wwZj/emziL98I1kf1UZgNIsYELQEKAQAAAAAAAAABAAO32triSNLXJubm+sBN+lbYosN3ykl8iVUmREj0hO1Nz1IABAPvApR7HUrwQUO/FoEXpWnHnHz2vpsMk8DT2doV1Nwh4APoOjR3pJ5Jj/b9thBymJT96iVJNfZdb96z4YvP/3ZEuQQEBAQEBAQEBAQEBAQEcgAEBAQEAwAYKOMRzay9vdMnNqVdYCCprUSQAEgueNtFRhLxHcJeBAPKdsd3M5d1JSsULlc92k9tg9XpPUcGYzHY+jSRwlM+RwQEBAQEBAQDb3OGKsDYwWrvEw3gfTb9UipoBFZ9I8pYS8ntV4wAM6oEBEoBJwwPAQAECAgJAAELCAcFBQgDCQ0NCgQICQEJCQAFDQcDCAgPAwcNDwPqBPR7WXK0bOm5grD7JqZG1o8ymVny67eCX22yIybAzAYCBJzCeAE=\",\n        \"lastProof\": \"GgEAAAABAe7wFiVtSpzngy2v5Lv6LQCPkn8uBlIAA1GZMg/ZG96bUUsFRwyZwD2mw/kkKd2sO8mj7AKs5yqSBAQEBAQEBAQEBAQEBAQD7/elUnvysLKgzT96xy6wwZj/emziL98I1kf1UZgNIsYELQEKAQAAAAAAAAABAAO32triSNLXJubm+sBN+lbYosN3ykl8iVUmREj0hO1Nz1IABAPvApR7HUrwQUO/FoEXpWnHnHz2vpsMk8DT2doV1Nwh4APoOjR3pJ5Jj/b9thBymJT96iVJNfZdb96z4YvP/3ZEuQQEBAQEBAQEBAQEBAQEcgAEBAQEAwAYKOMRzay9vdMnNqVdYCCprUSQAEgueNtFRhLxHcJeBAPKdsd3M5d1JSsULlc92k9tg9XpPUcGYzHY+jSRwlM+RwQEBAQEBAQDb3OGKsDYwWrvEw3gfTb9UipoBFZ9I8pYS8ntV4wAM6oEBEoBJw4PAAEGAgUGDQQKCQwOBwgDAg0KDw4ECwsPCgINAAAIDwkCBw8CDgOpMv0n0GGU2BoUUydwQJcc1bzfrOCWmTdbjX56GFcBagcCBZzq4+8A\",\n        \"truncated\": false,\n        \"results\": [\n            {\n                \"key\": \"AQFM8QSIkBuHVYOd2kiRmQXXOI833w==\",\n                \"value\": \"nMJ4AQ==\"\n            },\n            {\n                \"key\": \"AQFmmdXxSKUGNq3wQcppLAdAe8sD+g==\",\n                \"value\": \"yGJI4+cA\"\n            },\n            {\n                \"key\": \"AQHu8BYlbUqc54Mtr+S7+i0Aj5J/Lg==\",\n                \"value\": \"nOrj7wA=\"\n            }\n        ]\n    }\n}\n```\n\nRequest body:\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"findstates\",\n  \"params\": [\"0xec31cdb14da4143e2ab471a8b5812d895b88fc1c12d54e112791491feca9b5f4\",\"0xb1fbb6b0096919071769906bb23b2ca2ec51eea7\",\"AQE=\",\"AQFM8QSIkBuHVYOd2kiRmQXXOI833w==\",2],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"firstProof\": \"GgEAAAABAWaZ1fFIpQY2rfBBymksB0B7ywP6BlIAA1GZMg/ZG96bUUsFRwyZwD2mw/kkKd2sO8mj7AKs5yqSBAQEBAQEBAQEBAQEBAQD7/elUnvysLKgzT96xy6wwZj/emziL98I1kf1UZgNIsYELQEKAQAAAAAAAAABAAO32triSNLXJubm+sBN+lbYosN3ykl8iVUmREj0hO1Nz1IABAPvApR7HUrwQUO/FoEXpWnHnHz2vpsMk8DT2doV1Nwh4APoOjR3pJ5Jj/b9thBymJT96iVJNfZdb96z4YvP/3ZEuQQEBAQEBAQEBAQEBAQEcgAEBAQEAwAYKOMRzay9vdMnNqVdYCCprUSQAEgueNtFRhLxHcJeBAPKdsd3M5d1JSsULlc92k9tg9XpPUcGYzHY+jSRwlM+RwQEBAQEBAQDb3OGKsDYwWrvEw3gfTb9UipoBFZ9I8pYS8ntV4wAM6oEBEoBJwYJCQ0FDwEECAoFAAYDBgoNDwAEAQwKBgkCDAAHBAAHCwwLAAMPCgOdJYDatk7lvSUyTBhr0mRtcpdMQNr3JtRyjRD2dEjxpwgCBshiSOPnAA==\",\n        \"lastProof\": \"GgEAAAABAe7wFiVtSpzngy2v5Lv6LQCPkn8uBlIAA1GZMg/ZG96bUUsFRwyZwD2mw/kkKd2sO8mj7AKs5yqSBAQEBAQEBAQEBAQEBAQD7/elUnvysLKgzT96xy6wwZj/emziL98I1kf1UZgNIsYELQEKAQAAAAAAAAABAAO32triSNLXJubm+sBN+lbYosN3ykl8iVUmREj0hO1Nz1IABAPvApR7HUrwQUO/FoEXpWnHnHz2vpsMk8DT2doV1Nwh4APoOjR3pJ5Jj/b9thBymJT96iVJNfZdb96z4YvP/3ZEuQQEBAQEBAQEBAQEBAQEcgAEBAQEAwAYKOMRzay9vdMnNqVdYCCprUSQAEgueNtFRhLxHcJeBAPKdsd3M5d1JSsULlc92k9tg9XpPUcGYzHY+jSRwlM+RwQEBAQEBAQDb3OGKsDYwWrvEw3gfTb9UipoBFZ9I8pYS8ntV4wAM6oEBEoBJw4PAAEGAgUGDQQKCQwOBwgDAg0KDw4ECwsPCgINAAAIDwkCBw8CDgOpMv0n0GGU2BoUUydwQJcc1bzfrOCWmTdbjX56GFcBagcCBZzq4+8A\",\n        \"truncated\": false,\n        \"results\": [\n            {\n                \"key\": \"AQFmmdXxSKUGNq3wQcppLAdAe8sD+g==\",\n                \"value\": \"yGJI4+cA\"\n            },\n            {\n                \"key\": \"AQHu8BYlbUqc54Mtr+S7+i0Aj5J/Lg==\",\n                \"value\": \"nOrj7wA=\"\n            }\n        ]\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"findstates\",\n\t\"params\": [\n\t\t\"0xec31cdb14da4143e2ab471a8b5812d895b88fc1c12d54e112791491feca9b5f4\",\n\t\t\"0xb1fbb6b0096919071769906bb23b2ca2ec51eea7\",\n\t\t\"AQE=\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145908.0305,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_b3bc2a3d74d14dd885f0caf75647558e",
      "parentId": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "modified": 1640207952610,
      "created": 1623692736402,
      "url": "{{ node }}",
      "name": "getproof",
      "description": "Gets proof by querying root hash, contract hash, and storage key.\n\n> You must install the plugin [StateService](https://github.com/neo-project/neo-plugins/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- roothash: root hash of state root\n\n- scripthash: Contract script hash\n\n- key: key of the storage; Base64-encoded.\n\n## Configuration\n\nBefore you can invoke the getproof method you must install the plugin [StateService](https://github.com/neo-project/neo-plugins/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases), and then modify the following fields in the [StateService](https://github.com/neo-project/neo-plugins/releases) config.json fileï¼š\n\n- FullState: Set to true, or the error message is returned as followsï¼š\n\n  ```json\n  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"error\": {\n      \"code\": -100,\n      \"message\": \"Old state not supported\",\n      \"data\": \"   at Neo.Plugins.StateService.StatePlugin.GetProof(UInt256 root_hash, UInt160 script_hash, Byte[] key)\\r\\n   at Neo.Plugins.StateService.StatePlugin.GetProof(JArray _params)\\r\\n   at Neo.Plugins.RpcServer.ProcessRequest(HttpContext context, JObject request)\"\n    }\n  }\n  ```\n\n- Network: Set to the same value as `magic` in the Neo-cli config.json.\n\n- AutoVerify: Set whether to enable verification by default, and if yes, the default active wallet in Neo-cli is used as the verification node.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getproof\",\n  \"params\": [\"0x7bf925dbd33af0e00d392b92313da59369ed86c82494d0e02040b24faac0a3ca\",\"0x79bcd398505eb779df6e67e4be6c14cded08e2f2\",\"Fw==\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": \"Bfv///8XBiQBAQ8DRzb6Vkdw0r5nxMBp6Z5nvbyXiupMvffwm0v5GdB6jHvyAAQEBAQEBAQEA7l84HFtRI5V11s58vA+8CZ5GArFLkGUYLO98RLaMaYmA5MEnx0upnVI45XTpoUDRvwrlPD59uWy9aIrdS4T0D2cA6Rwv/l3GmrctRzL1me+iTUFdDgooaz+esFHFXJdDANfA2bdshZMp5ox2goVAOMjvoxNIWWOqjJoRPu6ZOw2kdj6A8xovEK1Mp6cAG9z/jfFDrSEM60kuo97MNaVOP/cDZ1wA1nf4WdI+jksYz0EJgzBukK8rEzz8jE2cb2Zx2fytVyQBANC7v2RaLMCRF1XgLpSri12L2IwL9Zcjz5LZiaB5nHKNgQpAQYPDw8PDw8DggFffnsVMyqAfZjg+4gu97N/gKpOsAK8Q27s56tijRlSAAMm26DYxOdf/IjEgkE/u/CoRL6dDnzvs1dxCg/00esMvgPGioeOqQCkDOTfliOnCxYjbY/0XvVUOXkceuDm1W0FzQQEBAQEBAQEBAQEBAQEBJIABAPH1PnX/P8NOgV4KHnogwD7xIsD8KvNhkTcDxgCo7Ec6gPQs1zD4igSJB4M9jTREq+7lQ5PbTH/6d138yUVvtM8bQP9Df1kh7asXrYjZolKhLcQ1NoClQgEzbcJfYkCHXv6DQQEBAOUw9zNl/7FJrWD7rCv0mbOoy6nLlHWiWuyGsA12ohRuAQEBAQEBAQEBAYCBAIAAgA=\"\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getproof\",\n\t\"params\": [\n\t\t\"0x7bf925dbd33af0e00d392b92313da59369ed86c82494d0e02040b24faac0a3ca\",\n\t\t\"0x79bcd398505eb779df6e67e4be6c14cded08e2f2\",\n\t\t\"Fw==\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145883.0337,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_c51b83525079424d8abed70bdeba3856",
      "parentId": "fld_a1eabe45ccd7475799cb10d4fd73b175",
      "modified": 1640207953910,
      "created": 1623692739533,
      "url": "{{ node }}",
      "name": "verifyproof",
      "description": "Verifies using the root hash and proof, and gets the value of the storage corresponding to the key.\n\n> You must install the plugin [StateService](https://github.com/neo-project/neo-plugins/releases) and [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n## Parameter Description\n\n- roothash: root hash of the state root\n\n- proof: proof data of the state root; Base64-encoded.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"verifyproof\",\n  \"params\": [\"0x7bf925dbd33af0e00d392b92313da59369ed86c82494d0e02040b24faac0a3ca\", \"Bfv///8XBiQBAQ8DRzb6Vkdw0r5nxMBp6Z5nvbyXiupMvffwm0v5GdB6jHvyAAQEBAQEBAQEA7l84HFtRI5V11s58vA+8CZ5GArFLkGUYLO98RLaMaYmA5MEnx0upnVI45XTpoUDRvwrlPD59uWy9aIrdS4T0D2cA6Rwv/l3GmrctRzL1me+iTUFdDgooaz+esFHFXJdDANfA2bdshZMp5ox2goVAOMjvoxNIWWOqjJoRPu6ZOw2kdj6A8xovEK1Mp6cAG9z/jfFDrSEM60kuo97MNaVOP/cDZ1wA1nf4WdI+jksYz0EJgzBukK8rEzz8jE2cb2Zx2fytVyQBANC7v2RaLMCRF1XgLpSri12L2IwL9Zcjz5LZiaB5nHKNgQpAQYPDw8PDw8DggFffnsVMyqAfZjg+4gu97N/gKpOsAK8Q27s56tijRlSAAMm26DYxOdf/IjEgkE/u/CoRL6dDnzvs1dxCg/00esMvgPGioeOqQCkDOTfliOnCxYjbY/0XvVUOXkceuDm1W0FzQQEBAQEBAQEBAQEBAQEBJIABAPH1PnX/P8NOgV4KHnogwD7xIsD8KvNhkTcDxgCo7Ec6gPQs1zD4igSJB4M9jTREq+7lQ5PbTH/6d138yUVvtM8bQP9Df1kh7asXrYjZolKhLcQ1NoClQgEzbcJfYkCHXv6DQQEBAOUw9zNl/7FJrWD7rCv0mbOoy6nLlHWiWuyGsA12ohRuAQEBAQEBAQEBAYCBAIAAgA=\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"AAI=\"\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"verifyproof\",\n\t\"params\": [\n\t\t\"0x7bf925dbd33af0e00d392b92313da59369ed86c82494d0e02040b24faac0a3ca\",\n\t\t\"Bfv///8XBiQBAQ8DRzb6Vkdw0r5nxMBp6Z5nvbyXiupMvffwm0v5GdB6jHvyAAQEBAQEBAQEA7l84HFtRI5V11s58vA+8CZ5GArFLkGUYLO98RLaMaYmA5MEnx0upnVI45XTpoUDRvwrlPD59uWy9aIrdS4T0D2cA6Rwv/l3GmrctRzL1me+iTUFdDgooaz+esFHFXJdDANfA2bdshZMp5ox2goVAOMjvoxNIWWOqjJoRPu6ZOw2kdj6A8xovEK1Mp6cAG9z/jfFDrSEM60kuo97MNaVOP/cDZ1wA1nf4WdI+jksYz0EJgzBukK8rEzz8jE2cb2Zx2fytVyQBANC7v2RaLMCRF1XgLpSri12L2IwL9Zcjz5LZiaB5nHKNgQpAQYPDw8PDw8DggFffnsVMyqAfZjg+4gu97N/gKpOsAK8Q27s56tijRlSAAMm26DYxOdf/IjEgkE/u/CoRL6dDnzvs1dxCg/00esMvgPGioeOqQCkDOTfliOnCxYjbY/0XvVUOXkceuDm1W0FzQQEBAQEBAQEBAQEBAQEBJIABAPH1PnX/P8NOgV4KHnogwD7xIsD8KvNhkTcDxgCo7Ec6gPQs1zD4igSJB4M9jTREq+7lQ5PbTH/6d138yUVvtM8bQP9Df1kh7asXrYjZolKhLcQ1NoClQgEzbcJfYkCHXv6DQQEBAOUw9zNl/7FJrWD7rCv0mbOoy6nLlHWiWuyGsA12ohRuAQEBAQEBAQEBAYCBAIAAgA=\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145858.0366,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_b9ea3f85b2a94f5887a71d868fa655bc",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207956148,
      "created": 1608651352729,
      "url": "{{ node }}",
      "name": "closewallet",
      "description": "Closes the current wallet.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"closewallet\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": true\n}\n```\n\nResponse Description:\n\ntrue: The wallet is closed successfully.\nOthers: failure",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"closewallet\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146058,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_1300cf1858a746adb37fab101bdab15d",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1640208087744,
      "created": 1598954088016,
      "name": "Wallet",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1598255139659.125,
      "_type": "request_group"
    },
    {
      "_id": "req_891f5920cbcf4e178a8737e6fbdc63ae",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207957195,
      "created": 1608651433279,
      "url": "{{ node }}",
      "name": "dumpprivkey",
      "description": "Exports the private key of the specified address.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n### Parameter Description\n\naddress: To export the addresses of the private key. The address is required as a standard address.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"dumpprivkey\",\n  \"params\": [\"NepVckSSgHJf1szQ6LEibd5NU7Ap67yJrJ\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"L5LEfSAAbVAk5vxmkBpWQqJ2e1hyh3nEqgWaosB35XpBAkZdizj4\"\n}\n```\n\nResponse Description:\n\nReturns the private key of the standard address.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"dumpprivkey\",\n\t\"params\": [\n\t\t\"NepVckSSgHJf1szQ6LEibd5NU7Ap67yJrJ\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146045.5,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_3b913a5c88fc43d8b84b5900837badad",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207958195,
      "created": 1608651471301,
      "url": "{{ node }}",
      "name": "getwalletbalance",
      "description": "Returns the balance of the corresponding asset in the wallet, based on the specified asset number. This method applies to the contract assets that conform to NEP-5 standards.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n## Parameter Description\n\nAsset_id: Asset ID (asset identifier), which is the script hash of the contract for contract assets.\n\nFor example, NEO is 0xde5f57d430d3dece511cf975a8d37848cb9e0525\n\nGas is 0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\n\nYou can query asset ID using the [CLI command](../../../../node/cli/cli.md) `list asset` or using the blockchain browser.\n\n## Example\n\n> Make sure your client has been fully synchronized to the latest block height before using this API, otherwise the balance returned may not be up-to-date.\n\nExample: querying the balance of NEP-5 assets.\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getwalletbalance\",\n  \"params\": [\"0x8d06bc235c2585c9d27ede8ed7085b3e13fc0c36\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"balance\": \"16000000000\"\n    }\n}\n```\n\nResponse Description:\n\nbalance: the balance of the asset in the wallet. Since the NEP-5 assets adopt the balance system rather than the UTXO system, there is no `confirmed` in the returned result and the balance is the actual available balance.\n\n> * Only when your client synchronizes to the block that the contract was deployed, execution of this API will return the correct value, otherwise execution of the API will result in an error.\n> * When the input parameter is a script hash of a non-NEP-5 smart contract, execution of the API will result in an error.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getwalletbalance\",\n\t\"params\": [\n\t\t\"0x8d06bc235c2585c9d27ede8ed7085b3e13fc0c36\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146039.25,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_a69decba551b48b09efe12aee93fcfaf",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207959420,
      "created": 1598884804723,
      "url": "{{ node }}",
      "name": "getnewaddress",
      "description": "",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getnewaddress\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146037.6875,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_145170e7271d47a1b4656fa1675e7b84",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207960899,
      "created": 1598959516194,
      "url": "{{ node }}",
      "name": "getunclaimedgas",
      "description": "Returns the unclaimed GAS with the specified address.\n\n## Parameter Description\n\n- address: Specified address.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getunclaimedgas\",\n  \"params\": [\"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"unclaimed\": \"9693738\",\n        \"address\": \"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\"\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getunclaimedgas\",\n\t\"params\": [\n\t\t\"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146036.9062,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_19e19517fc2f4d998c8c48f50fc5d79c",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207962139,
      "created": 1608651505669,
      "url": "{{ node }}",
      "name": "getwalletunclaimedgas",
      "description": "Gets the amount of unclaimed GAS in the wallet.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getwalletunclaimedgas\",\n  \"params\": [\"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"897299680935\"\n}\n```\n\nResponse description:\n\nReturns the unclaimed GAS amount.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"getwalletunclaimedgas\",\n\t\"params\": [\n\t\t\"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146036.125,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_4816527d1ddc47fe8b01c824bcd1eacf",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207963427,
      "created": 1608651534883,
      "url": "{{ node }}",
      "name": "importprivkey",
      "description": "Imports the private key to the wallet.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n### Parameter Description\n\nkey: The WIF-format private key.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"importprivkey\",\n  \"params\": [\"KwYRSjqmEhK4nPuUZZz1LEUSxvSzSRCv3SVePoe67hjcdPGLRJY5\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"address\": \"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\",\n        \"haskey\": true,\n        \"label\": null,\n        \"watchonly\": false\n    }\n}\n```\n\nResponse description:\n\nReturns the address corresponding to the key.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"importprivkey\",\n\t\"params\": [\n\t\t\"KwYRSjqmEhK4nPuUZZz1LEUSxvSzSRCv3SVePoe67hjcdPGLRJY5\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146034.5625,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_4fb2f3aed4064b5185497444fa6705e1",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207966323,
      "created": 1608650937707,
      "url": "{{ node }}",
      "name": "calculatenetworkfee",
      "description": "Calculates network fee for the specified transaction.\n\n> Before you can invoke this method you must install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases).\n\n## Parameter Description\n\ntx: Base64-encoded string of transaction information.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"calculatenetworkfee\",\n  \"params\": [\"AAzUzgl2c4kAAAAAAMhjJAAAAAAAmRQgAAKDHlc9J/rM4KzhpixYX/fRkt2q8ACBubhEJKzaXrq9mt5PesW40qC01AEAXQMA6HZIFwAAAAwUgx5XPSf6zOCs4aYsWF/30ZLdqvAMFIG5uEQkrNpeur2a3k96xbjSoLTUE8AMCHRyYW5zZmVyDBS8r0HWhMfUrW7g2Z2pcHudHwyOZkFifVtSOAJCDED0lByRy1/NfBDdKCFLA3RKAY+LLVeXAvut42izfO6PPsKX0JeaL959L0aucqcxBJfWNF3b+93mt9ItCxRoDnChKQwhAuj/F8Vn1i8nT+JHzIhKKmzTuP0Nd5qMWFYomlYKzKy0C0GVRA14QgxAMbiEtF4zjCUjGAzanxLckFiCY3DeREMGIxyerx5GCG/Ki0LGvNzbvPUAWeVGvbL5TVGlK55VfZECmy8voO1LsisRDCEC6P8XxWfWLydP4kfMiEoqbNO4/Q13moxYViiaVgrMrLQRC0ETje+v\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"networkfee\": 2384840\n    }\n}\n\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"calculatenetworkfee\",\n\t\"params\": [\n\t\t\"AAzUzgl2c4kAAAAAAMhjJAAAAAAAmRQgAAKDHlc9J/rM4KzhpixYX/fRkt2q8ACBubhEJKzaXrq9mt5PesW40qC01AEAXQMA6HZIFwAAAAwUgx5XPSf6zOCs4aYsWF/30ZLdqvAMFIG5uEQkrNpeur2a3k96xbjSoLTUE8AMCHRyYW5zZmVyDBS8r0HWhMfUrW7g2Z2pcHudHwyOZkFifVtSOAJCDED0lByRy1/NfBDdKCFLA3RKAY+LLVeXAvut42izfO6PPsKX0JeaL959L0aucqcxBJfWNF3b+93mt9ItCxRoDnChKQwhAuj/F8Vn1i8nT+JHzIhKKmzTuP0Nd5qMWFYomlYKzKy0C0GVRA14QgxAMbiEtF4zjCUjGAzanxLckFiCY3DeREMGIxyerx5GCG/Ki0LGvNzbvPUAWeVGvbL5TVGlK55VfZECmy8voO1LsisRDCEC6P8XxWfWLydP4kfMiEoqbNO4/Q13moxYViiaVgrMrLQRC0ETje+v\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146034.1719,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_fcf5fc1afc5442fd85974eca12fe05c4",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207976206,
      "created": 1608651557269,
      "url": "{{ node }}",
      "name": "listaddress",
      "description": "Lists all the addresses in the current wallet.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n## Example\n\nRequest bodyï¼š\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"listaddress\",\n  \"params\": [],\n  \"id\": 1\n}\n```\n\nResponse bodyï¼š\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"address\": \"NZos4XyLUEUrD7RQBn9J1A1PyeCwQKqwtT\",\n            \"haskey\": true,\n            \"label\": null,\n            \"watchonly\": false\n        },\n        {\n            \"address\": \"NdAth5nq7RyG4HEJRsVJxnk9Q6XHoeB3No\",\n            \"haskey\": true,\n            \"label\": null,\n            \"watchonly\": false\n        }\n    ]\n}\n```\n\nResponse descriptionï¼š\n\naddress: The address in the wallet.\n\nwatchonly: Indicates whether it is a watch only address.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"listaddress\",\n\t\"params\": [],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146033.7812,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_7998cfabd14d4553a02fa9f20652fddc",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207977429,
      "created": 1608651585132,
      "url": "{{ node }}",
      "name": "openwallet",
      "description": "Opens the specified wallet file.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke this method.\n\n## Parameter Description\n\npath: The wallet file path\npassword: In plain text.\n\n## Example\n\nRequest bodyï¼š\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"openwallet\",\n  \"params\": [\"11.db3\", \"1\"],\n  \"id\": 1\n}\n```\n\nResponse bodyï¼š\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": true\n}\n```\n\nResponse descriptionï¼š\n\ntrue: The wallet is opened.\n\nOthers: The wallet cannot be opened.\n",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"openwallet\",\n\t\"params\": [\n\t\t\"11.db3\",\n\t\t\"1\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146033.3906,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_f3cdcf7ade564a84a334b9700f54c3a1",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207978891,
      "created": 1608651607057,
      "url": "{{ node }}",
      "name": "sendfrom",
      "description": "Transfer from the specified address to the destination address.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n### Parameter Description\n\n* asset_id: Asset IDï¼ˆasset identifierï¼‰, the script hash of nep-5 contract.\n\n  e.g. NEO is 0xde5f57d430d3dece511cf975a8d37848cb9e0525\n\nâ€‹        GAS is 0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\n* from: transfering address.\n* address: destination address.\n* value: Transfer amount\n* signers: The signature account of transaction\n\n## Example\n\nRequest bodyï¼š\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"sendfrom\",\n  \"params\": [\"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\",\"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\", 20, [\"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\"NZttvm9tAhMjyxZATvqN9WFYkHYMNaXD6C\"]]\n}\n```\n\nRequest body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0x5530ac26a55ec9652ee2300879ba8dcbe0abe2d4a077426fc6783bbc269ba39b\",\n        \"size\": 248,\n        \"version\": 0,\n        \"nonce\": 737954039,\n        \"sender\": \"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\",\n        \"sysfee\": \"9007990\",\n        \"netfee\": \"1248390\",\n        \"validuntilblock\": 2105164,\n        \"signers\": [\n            {\n                \"account\": \"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\n                \"scopes\": \"CalledByEntry\"\n            },\n            {\n                \"account\": \"0x1e01f56dbb2a9799422512752b900a5a49ca5d99\",\n                \"scopes\": \"CalledByEntry\"\n            }\n        ],\n        \"attributes\": [],\n        \"script\": \"AgCUNXcMFJhi+vwOIcqnRtK5Br/vfRNBU1GEDBQcA1dGS3d+z2tfOsOJOs4fixYh9hPADAh0cmFuc2ZlcgwUvK9B1oTH1K1u4NmdqXB7nR8MjmZBYn1bUjg=\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEBIGjD61/KPyUq51sfsgla6MlruIbBG3eYkmI2cWXHrcGYMm6ucO6Va2Dc7v7mzF8XnQvJtrBVjv/caRpqt08OA\",\n                \"verification\": \"DCECIItAHAHzOQfla6fHzYkOv5cXTzazCk9DZ6xRAlIUXH4LQZVEDXg=\"\n            },\n            {\n                \"invocation\": \"DEC5O1ZFX46Vhdm4H8uY3IfYWHMbMnIkl5QljOYK8lVIfinYfbvyFuHsELDUM1io1RrbShjwkoFiVG1UKfC0nlqC\",\n                \"verification\": \"DCECi9GQLE0UGfACuCHm3mU939U1gGMgjkJnVjmL5v+jqsgLQZVEDXg=\"\n            }\n        ]\n    }\n}\n```\n\nResponse Description:\n\nReturns the transaction details as above if the transaction was sent successfully; otherwise the transaction is failed.\n\nIf the signature is incomplete, a pending transaction is returned. If the balance is insufficient, an error message is returned.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"method\": \"sendfrom\",\n\t\"params\": [\n\t\t\"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n\t\t\"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\",\n\t\t\"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\",\n\t\t20,\n\t\t[\n\t\t\t\"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\n\t\t\t\"NZttvm9tAhMjyxZATvqN9WFYkHYMNaXD6C\"\n\t\t]\n\t]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146033.1953,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_29c908f3fe094d069af5cf55236a6fad",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207980044,
      "created": 1608651629083,
      "url": "{{ node }}",
      "name": "sendmany",
      "description": "Bulk transfer order, and you can specify a change address.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"sendmany\",\n  \"params\": [from, outputs_array],\n  \"id\": 1\n}\n```\n\n### Parameter Description\n\n* `from`: Optional. The address from which you transfer the asset.\n\n* `outputs_array`ï¼šArray, the data structure of each element in the array is as follows:\n\n  ```json\n  {\"asset\": <asset>,\"value\": <value>,\"address\": <address>, \"signers\": <signers>}\n  ```\n\n  * `asset`: Asset ID (asset identifier),  the NEP-5 contract scripthash\n  \n    e.g. NEO is 0xde5f57d430d3dece511cf975a8d37848cb9e0525\n  \n    Gas is 0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\n  \n  * `value`: Transfer amount\n  \n  * `address`: Destination address\n  \n  * `signers`: The signature account of transaction\n\n## Example\n\nRequest text:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"sendmany\",\n  \"params\": [\n    \"NNU67Fvdy3LEQTM374EJ9iMbCRxVExgM8Y\",\n    [\n      {\n                \"asset\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                \"value\": 1,\n                \"address\": \"Nc2TgT3BTnDZGh21uU14Fudaq9C8GqUKJA\"\n            },\n            {\n                \"asset\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                \"value\": 2,\n                \"address\": \"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\"\n            },\n            {\n                \"asset\": \"0xde5f57d430d3dece511cf975a8d37848cb9e0525\",\n                \"value\": 2,\n                \"address\": \"Nc2TgT3BTnDZGh21uU14Fudaq9C8GqUKJA\"\n            }\n    ],\n    [\"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\"NZttvm9tAhMjyxZATvqN9WFYkHYMNaXD6C\"]\n  ]\n}\n```\n\nRequest text (without fromAddress):\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"sendmany\",\n  \"params\": [\n    [\n      {\n                \"asset\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                \"value\": 1,\n                \"address\": \"Nc2TgT3BTnDZGh21uU14Fudaq9C8GqUKJA\"\n            },\n            {\n                \"asset\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n                \"value\": 2,\n                \"address\": \"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\"\n            },\n            {\n                \"asset\": \"0xde5f57d430d3dece511cf975a8d37848cb9e0525\",\n                \"value\": 2,\n                \"address\": \"Nc2TgT3BTnDZGh21uU14Fudaq9C8GqUKJA\"\n            }\n    ],\n    [\"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\"NZttvm9tAhMjyxZATvqN9WFYkHYMNaXD6C\"]\n  ]\n}\n```\n\nResponse text:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0x9598b1ae5c6d339c04efe6d4a7e7f2c02dec22a7f6a77890650760becbf86ed3\",\n        \"size\": 554,\n        \"version\": 0,\n        \"nonce\": 1571115423,\n        \"sender\": \"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\",\n        \"sysfee\": \"27023970\",\n        \"netfee\": \"2554780\",\n        \"validuntilblock\": 2105186,\n        \"signers\": [\n            {\n                \"account\": \"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\n                \"scopes\": \"CalledByEntry\"\n            },\n            {\n                \"account\": \"0x1e01f56dbb2a9799422512752b900a5a49ca5d99\",\n                \"scopes\": \"CalledByEntry\"\n            }\n        ],\n        \"attributes\": [],\n        \"script\": \"AgDh9QUMFLC8S2S+4uI9PTLeAsqsGFP6u7QDDBSYYvr8DiHKp0bSuQa/730TQVNRhBPADAh0cmFuc2ZlcgwUvK9B1oTH1K1u4NmdqXB7nR8MjmZBYn1bUjgCAMLrCwwUmGL6/A4hyqdG0rkGv+99E0FTUYQMFJhi+vwOIcqnRtK5Br/vfRNBU1GEE8AMCHRyYW5zZmVyDBS8r0HWhMfUrW7g2Z2pcHudHwyOZkFifVtSOBIMFLC8S2S+4uI9PTLeAsqsGFP6u7QDDBQYzhHJsUqJElJHQzwgOk2AD/UgsRPADAh0cmFuc2ZlcgwUJQWey0h406h1+RxRzt7TMNRXX95BYn1bUjg=\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEBIGjD61/KPyUq51sfsgla6MlruIbBG3eYkmI2cWXHrcGYMm6ucO6Va2Dc7v7mzF8XnQvJtrBVjv/caRpqt08OA\",\n                \"verification\": \"DCECIItAHAHzOQfla6fHzYkOv5cXTzazCk9DZ6xRAlIUXH4LQZVEDXg=\"\n            },\n            {\n                \"invocation\": \"DEC5O1ZFX46Vhdm4H8uY3IfYWHMbMnIkl5QljOYK8lVIfinYfbvyFuHsELDUM1io1RrbShjwkoFiVG1UKfC0nlqC\",\n                \"verification\": \"DCECi9GQLE0UGfACuCHm3mU939U1gGMgjkJnVjmL5v+jqsgLQZVEDXg=\"\n            }\n        ]\n    }\n}\n```\n\nResponse Description:\n\nReturns the transaction details as above if the transaction was sent successfully; otherwise the transaction is failed.\n\nIf the JSON format is incorrect, a Parse error is returned. If the signature is incomplete, a pending transaction is returned. If the balance is insufficient, an error message is returned.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"method\": \"sendmany\",\n\t\"params\": [\n\t\t[\n\t\t\t{\n\t\t\t\t\"asset\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n\t\t\t\t\"value\": 1,\n\t\t\t\t\"address\": \"Nc2TgT3BTnDZGh21uU14Fudaq9C8GqUKJA\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"asset\": \"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\n\t\t\t\t\"value\": 2,\n\t\t\t\t\"address\": \"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"asset\": \"0xde5f57d430d3dece511cf975a8d37848cb9e0525\",\n\t\t\t\t\"value\": 2,\n\t\t\t\t\"address\": \"Nc2TgT3BTnDZGh21uU14Fudaq9C8GqUKJA\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t\"0xf621168b1fce3a89c33a5f6bcf7e774b4657031c\",\n\t\t\t\"NZttvm9tAhMjyxZATvqN9WFYkHYMNaXD6C\"\n\t\t]\n\t]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146033.0977,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_12b94fc8b0a44c5e83236b7272f386f6",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640207981780,
      "created": 1608651689347,
      "url": "{{ node }}",
      "name": "sendtoaddress",
      "description": "Transfers to the specified address.\n\n> Before you can invoke this method you must:\n>\n> 1. Install the plugin [RpcServer](https://github.com/neo-project/neo-plugins/releases) \n> 2. Call the RPC method `openwallet` to open the wallet first.\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"sendtoaddress\",\n  \"params\": [asset_id,address,value],\n  \"id\": 1\n}\n```\n\n## Parameter Description\n\n* asset_idï¼š Asset ID (asset identifier),  the script hash of NEP-5 contract\n\n  e.g. NEO is 0xde5f57d430d3dece511cf975a8d37848cb9e0525\n\n  Gas is 0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\n\n* address: Payment address\n\n* value: Amount transferred\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"sendtoaddress\",\n  \"params\": [\"0x668e0c1f9d7b70a99dd9e06eadd4c784d641afbc\",\"NPJRHLjDm4r1wd8wHBGFRWqzsneFX9tBch\",21]\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"hash\": \"0xfa17173184bce48315f72e11e42362f94019b345e72ca07fd630f186ae29f79f\",\n        \"size\": 378,\n        \"version\": 0,\n        \"nonce\": 1657481343,\n        \"sender\": \"NZoiUCBHBZ4DquVE5mbdpTQGozvJkWHtE8\",\n        \"sysfee\": \"9007990\",\n        \"netfee\": \"2378780\",\n        \"validuntilblock\": 2105205,\n        \"signers\": [\n            {\n                \"account\": \"0x84515341137defbf06b9d246a7ca210efcfa6298\",\n                \"scopes\": \"FeeOnly\"\n            },\n            {\n                \"account\": \"0xb120f50f804d3a203c43475212894ab1c911ce18\",\n                \"scopes\": \"CalledByEntry\"\n            }\n        ],\n        \"attributes\": [],\n        \"script\": \"AgB1K30MFCUnUAaADnPMZChnU6OnMkIlIcjkDBQYzhHJsUqJElJHQzwgOk2AD/UgsRPADAh0cmFuc2ZlcgwUvK9B1oTH1K1u4NmdqXB7nR8MjmZBYn1bUjg=\",\n        \"witnesses\": [\n            {\n                \"invocation\": \"DEBvKiq5NHkE3PsjbXe0YvNmSDq9c6PzoK1fsDljhEAvvoPSqhhoSj+gVyAuQqUKFuBM0O/+HM5xorM8vdm60hNb\",\n                \"verification\": \"DCECIItAHAHzOQfla6fHzYkOv5cXTzazCk9DZ6xRAlIUXH4LQZVEDXg=\"\n            },\n            {\n                \"invocation\": \"DEAbhpq036r6sZaRSPXjv+cC6G85rhIDcnpvcFvNmsNFlFoUVUIoyBDUqa/1wxajj5yjH0VPgsvhlBwoK7hGOMZU\",\n                \"verification\": \"DCECi9GQLE0UGfACuCHm3mU939U1gGMgjkJnVjmL5v+jqsgLQZVEDXg=\"\n            }\n        ]\n    }\n}\n```\n\nResponse Description:\n\nReturning of the transaction details above indicates that the transaction was sent successfully. If not, the transaction has failed to send.\n\nIf the signature is incomplete, it returns the transaction to be signed.\n\nIf the balance is insufficient, it returns an error message.",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"method\": \"sendtoaddress\",\n\t\"params\": [\n\t\t\"0xd2a4cff31913016155e38e474a2c06d08be276cf\",\n\t\t\"NMehqhTZwmjpSeuYy4TBE8rk3AkYoxjPy7\",\n\t\t1\n\t]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255146033.0488,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_19ecadda9d8a4805b1ff1d0f3b943c8a",
      "parentId": "fld_1300cf1858a746adb37fab101bdab15d",
      "modified": 1640208038482,
      "created": 1598959925800,
      "url": "{{ node }}",
      "name": "validateaddress",
      "description": "Verifies that the address is a valid NEO address.\n\n> You must install the plugin [RpcServer](https://github.com/neo-project/neo-modules/releases) before you can invoke the method.\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"validateaddress\",\n  \"params\": [address],\n  \"id\": 1\n}\n```\n\n## Parameter Description\n\naddress: Address.\n\n> [!Note]\n>\n> The NEO standard address begins with N because AddressVersion in NEO3 has been modified to 53.\n\n## Example\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"validateaddress\",\n  \"params\": [\"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"address\": \"NPvKVTGZapmFWABLsyvfreuqn73jCjJtN1\",\n        \"isvalid\": true\n    }\n}\n```\n\nRequest body:\n\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"validateaddress\",\n  \"params\": [\"152f1muMCNa7goXYhYAQC61hxEgGacmncB\"],\n  \"id\": 1\n}\n```\n\nResponse body:\n\n```json\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"address\": \"152f1muMCNa7goXYhYAQC61hxEgGacmncB\",\n        \"isvalid\": false\n    }\n}\n```",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"jsonrpc\": \"2.0\",\n\t\"method\": \"validateaddress\",\n\t\"params\": [\n\t\t\"NXZNQrNbTChstvSmgQRf695e3ZpxLBSgkR\"\n\t],\n\t\"id\": 1\n}"
      },
      "parameters": [],
      "headers": [
        {
          "id": "pair_96a8e4c2014046199a5213f0b66f179d",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {},
      "metaSortKey": -1598255145983.0488,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "env_7e82520577962542c5d4cf39611132fad8b0db64",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1595345719404,
      "created": 1595345719404,
      "name": "Base Environment",
      "data": {},
      "dataPropertyOrder": null,
      "color": null,
      "isPrivate": false,
      "metaSortKey": 1595345719404,
      "_type": "environment"
    },
    {
      "_id": "jar_7e82520577962542c5d4cf39611132fad8b0db64",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1595345719406,
      "created": 1595345719406,
      "name": "Default Jar",
      "cookies": [],
      "_type": "cookie_jar"
    },
    {
      "_id": "spc_8acf57d02c6c48febc0e7d286342afab",
      "parentId": "wrk_b93e43642e4b4cca822ace37b22a9e7b",
      "modified": 1640208032855,
      "created": 1595345719375,
      "fileName": "Neo N3 API",
      "contents": "",
      "contentType": "yaml",
      "_type": "api_spec"
    },
    {
      "_id": "env_cf1a36cdc4a841499e327e06499825ae",
      "parentId": "env_7e82520577962542c5d4cf39611132fad8b0db64",
      "modified": 1640207987654,
      "created": 1608648920611,
      "name": "MainNet",
      "data": {
        "node": "neo3.edgeofneo.com:10332",
        "go": "n3.edgeofneo.com:10332"
      },
      "dataPropertyOrder": {
        "&": [
          "node",
          "go"
        ]
      },
      "color": null,
      "isPrivate": false,
      "metaSortKey": 0,
      "_type": "environment"
    },
    {
      "_id": "env_29883610996840a2ba0c08ec671196ab",
      "parentId": "env_7e82520577962542c5d4cf39611132fad8b0db64",
      "modified": 1640207889234,
      "created": 1613509431306,
      "name": "Express",
      "data": {
        "node": "0.0.0.0:50012"
      },
      "dataPropertyOrder": {
        "&": [
          "node"
        ]
      },
      "color": null,
      "isPrivate": false,
      "metaSortKey": 2,
      "_type": "environment"
    },
    {
      "_id": "env_3668bd9735154c0283c9eaac67280bf2",
      "parentId": "env_7e82520577962542c5d4cf39611132fad8b0db64",
      "modified": 1640207888668,
      "created": 1639668668341,
      "name": "TestNet",
      "data": {
        "node": "test.neo3.edgeofneo.com:20332",
        "go": "rpc1.testnet.n3.nspcc.ru:20332"
      },
      "dataPropertyOrder": {
        "&": [
          "node",
          "go"
        ]
      },
      "color": null,
      "isPrivate": false,
      "metaSortKey": 1,
      "_type": "environment"
    }
  ]
}